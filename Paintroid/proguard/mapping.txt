android.support.v4.app.BackStackRecord -> android.support.v4.app.a:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    void dump$ec96877(java.lang.String,java.io.PrintWriter) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitAllowingStateLoss() -> b
    int commitInternal(boolean) -> b
    void run() -> run
    void popFromBackStack(boolean) -> a
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.b:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.c:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.d:
    int mStyle -> a
    int mTheme -> b
    boolean mCancelable -> c
    boolean mShowsDialog -> d
    int mBackStackId -> e
    android.app.Dialog mDialog -> f
    boolean mDestroyed -> g
    boolean mRemoved -> h
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> a
    void dismiss() -> a
    void dismissInternal(boolean) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    android.app.Dialog onCreateDialog$5709b310() -> b
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> c
    void onStart() -> c
    void onSaveInstanceState(android.os.Bundle) -> d
    void onStop() -> d
    void onDestroyView() -> e
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> a
    int mState -> i
    android.view.View mAnimatingAway -> j
    int mStateAfterAnimating -> k
    android.os.Bundle mSavedFragmentState -> l
    android.util.SparseArray mSavedViewState -> m
    int mIndex -> n
    java.lang.String mWho -> o
    android.os.Bundle mArguments -> p
    android.support.v4.app.Fragment mTarget -> q
    int mTargetIndex -> r
    int mTargetRequestCode -> s
    boolean mAdded -> t
    boolean mRemoving -> u
    boolean mResumed -> v
    boolean mFromLayout -> w
    boolean mInLayout -> x
    boolean mRestored -> y
    int mBackStackNesting -> z
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> A
    android.support.v4.app.FragmentActivity mActivity -> B
    int mFragmentId -> C
    int mContainerId -> D
    java.lang.String mTag -> E
    boolean mHidden -> F
    boolean mDetached -> G
    boolean mRetainInstance -> H
    boolean mRetaining -> I
    boolean mHasMenu -> J
    boolean mMenuVisible -> K
    boolean mCalled -> L
    int mNextAnim -> M
    android.view.ViewGroup mContainer -> N
    android.view.View mView -> O
    android.view.View mInnerView -> P
    boolean mDeferStart -> Q
    boolean mUserVisibleHint -> R
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> S
    boolean mLoadersStarted -> T
    boolean mCheckedForLoaderManager -> U
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState() -> f
    void setIndex(int) -> a
    boolean isInBackStack() -> g
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> h
    void onHiddenChanged$1385ff() -> i
    void onActivityResult$6eb84b52() -> j
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate$423a76cd() -> k
    void onAttach$63a22f9() -> l
    android.view.animation.Animation onCreateAnimation$24236ca7() -> m
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView$469ccb8a() -> n
    void onViewCreated$65f1d89() -> o
    void onActivityCreated(android.os.Bundle) -> c
    void onStart() -> c
    void onResume() -> p
    void onSaveInstanceState(android.os.Bundle) -> d
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> q
    void onStop() -> d
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> e
    void onDestroy() -> r
    void initState() -> s
    void onDetach() -> t
    void onCreateOptionsMenu$761f6f96() -> u
    void onPrepareOptionsMenu$1eec55bd() -> v
    void onDestroyOptionsMenu() -> w
    boolean onOptionsItemSelected$1b88ab4c() -> x
    void onOptionsMenuClosed$1eec55bd() -> y
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected$1b88ab4c() -> z
    void dump$ec96877$79f041d6(java.lang.String,java.io.PrintWriter) -> a
    void performStart() -> A
    void performStop() -> B
    void performReallyStop() -> C
    void performDestroyView() -> D
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.e:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.f:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    boolean mCreated -> c
    boolean mResumed -> d
    boolean mStopped -> e
    boolean mReallyStopped -> f
    boolean mRetaining -> g
    boolean mOptionsMenuInvalidated -> h
    boolean mCheckedForLoaderManager -> i
    boolean mLoadersStarted -> j
    android.support.v4.app.HCSparseArray mAllLoaderManagers -> k
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> l
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    void supportInvalidateOptionsMenu() -> a
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void doReallyStop(boolean) -> a
    void onAttachFragment$65850823() -> b
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> c
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragmentIndex(int) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager$3d2266e4(int) -> b
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.g:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.h:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.i:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.app.HCSparseArray loaders -> e
android.support.v4.app.FragmentManager -> android.support.v4.app.j:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    void popBackStack$255f295(int) -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.k:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    boolean mNeedMenuInvalidate -> p
    boolean mStateSaved -> q
    boolean mDestroyed -> r
    java.lang.String mNoTransactionsBecause -> s
    boolean mHavePendingDeferredStart -> t
    android.os.Bundle mStateBundle -> u
    android.util.SparseArray mStateArray -> v
    java.lang.Runnable mExecCommit -> w
    android.view.animation.Interpolator DECELERATE_QUINT -> x
    android.view.animation.Interpolator DECELERATE_CUBIC -> y
    android.view.animation.Interpolator ACCELERATE_QUINT -> z
    android.view.animation.Interpolator ACCELERATE_CUBIC -> A
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean popBackStackImmediate() -> b
    void popBackStack$255f295(int) -> a
    java.lang.String toString() -> toString
    void dump$ec96877(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter) -> a
    android.view.animation.Animation makeOpenCloseAnimation$376f30fd(float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation$424ea1bd(float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int) -> a
    void moveToState(android.support.v4.app.Fragment) -> a
    void moveToState$2563266(int) -> e
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> u
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> v
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> c
    boolean execPendingActions() -> c
    void reportBackStackChanged() -> w
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState$68507953$44bd8ea3(int,int) -> a
    java.util.ArrayList retainNonConfig() -> d
    void saveFragmentViewState(android.support.v4.app.Fragment) -> b
    android.os.Parcelable saveAllState() -> e
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity) -> a
    void noteStateNotSaved() -> f
    void dispatchCreate() -> g
    void dispatchActivityCreated() -> h
    void dispatchStart() -> i
    void dispatchResume() -> j
    void dispatchPause() -> k
    void dispatchStop() -> l
    void dispatchReallyStop() -> m
    void dispatchDestroy() -> n
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> o
    boolean dispatchCreateOptionsMenu$761f6f92() -> p
    boolean dispatchPrepareOptionsMenu$1eec55b9() -> q
    boolean dispatchOptionsItemSelected$1b88ab4c() -> r
    boolean dispatchContextItemSelected$1b88ab4c() -> s
    void dispatchOptionsMenuClosed$1eec55bd() -> t
    int reverseTransit(int) -> d
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.l:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.m:
    int val$id -> a
    int val$flags -> b
    android.support.v4.app.FragmentManagerImpl this$0 -> c
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.n:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.o:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.p:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTransaction -> android.support.v4.app.q:
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    int commit() -> a
    int commitAllowingStateLoss() -> b
android.support.v4.app.HCSparseArray -> android.support.v4.app.r:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    java.lang.Object get(int) -> a
    void remove(int) -> b
    void removeAt(int) -> c
    void gc() -> c
    int size() -> a
    int keyAt(int) -> d
    java.lang.Object valueAt(int) -> e
    void clear() -> b
    int binarySearch$76412d8d(int[],int,int) -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.s:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.t:
    android.support.v4.content.Loader onCreateLoader$e57f803() -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.u:
    boolean DEBUG -> a
    android.support.v4.app.HCSparseArray mLoaders -> b
    android.support.v4.app.HCSparseArray mInactiveLoaders -> c
    android.support.v4.app.FragmentActivity mActivity -> d
    boolean mStarted -> e
    boolean mRetaining -> f
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump$ec96877$79f041d6(java.lang.String,java.io.PrintWriter) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.v:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void stop() -> a
    void destroy() -> b
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump$ec96877$79f041d6(java.lang.String,java.io.PrintWriter) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.w:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.x:
android.support.v4.app._ActionBarSherlockTrojanHorse -> android.support.v4.app._ActionBarSherlockTrojanHorse:
    java.util.ArrayList mCreatedMenus -> m
    boolean onCreatePanelMenu$753e82bf(com.actionbarsherlock.view.Menu) -> a
    boolean onPreparePanel$5631e5b5$753e82bf(com.actionbarsherlock.view.Menu) -> b
    boolean onMenuItemSelected$7350e552(com.actionbarsherlock.view.MenuItem) -> a
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> c
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> d
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> b
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> d
android.support.v4.app._ActionBarSherlockTrojanHorse$OnCreateOptionsMenuListener -> android.support.v4.app.y:
android.support.v4.app._ActionBarSherlockTrojanHorse$OnOptionsItemSelectedListener -> android.support.v4.app.z:
    boolean onOptionsItemSelected$58cc55c7() -> a
android.support.v4.app._ActionBarSherlockTrojanHorse$OnPrepareOptionsMenuListener -> android.support.v4.app.aa:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void stopLoading() -> b
    void reset() -> c
    java.lang.String toString() -> toString
    void dump$ec96877(java.lang.String,java.io.PrintWriter) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.a:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers$79c6ddc0(android.view.KeyEvent) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.b:
    int metaStateFilterDirectionalModifiers$2e71581f(int,int,int,int) -> a
    int normalizeMetaState(int) -> c
    boolean metaStateHasModifiers$255f299(int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.c:
    boolean metaStateHasModifiers$255f299(int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.d:
    boolean metaStateHasModifiers$255f299(int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.e:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionIndex(android.view.MotionEvent) -> a
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.f:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.g:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.h:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.PagerAdapter -> android.support.v4.view.i:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    boolean isViewFromObject$171eb1dd() -> b
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    android.support.v4.view.ViewPager mPager -> a
    android.widget.TextView mPrevText -> b
    android.widget.TextView mCurrText -> c
    android.widget.TextView mNextText -> d
    int mLastKnownCurrentPage -> e
    float mLastKnownPositionOffset -> f
    int mScaledTextSpacing -> g
    boolean mUpdatingText -> h
    boolean mUpdatingPositions -> i
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> j
    int[] ATTRS -> k
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText$7a69ae8(int) -> a
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void updateTextPositions(int,float) -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.j:
    int mScrollState -> b
    android.support.v4.view.PagerTitleStrip this$0 -> a
    void onPageScrolled$486775f1(int,float) -> a
    void onPageSelected$13462e() -> a
    void onPageScrollStateChanged(int) -> a
    void onChanged() -> onChanged
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.k:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.l:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.m:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.n:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.ViewCompat -> android.support.v4.view.o:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.p:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.q:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.r:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.s:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.t:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.u:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.v:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.w:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.PagerAdapter mAdapter -> e
    int mCurItem -> f
    int mRestoredCurItem -> g
    android.os.Parcelable mRestoredAdapterState -> h
    java.lang.ClassLoader mRestoredClassLoader -> i
    android.widget.Scroller mScroller -> j
    int mPageMargin -> k
    android.graphics.drawable.Drawable mMarginDrawable -> l
    int mTopPageBounds -> m
    int mBottomPageBounds -> n
    int mChildWidthMeasureSpec -> o
    int mChildHeightMeasureSpec -> p
    boolean mInLayout -> q
    boolean mScrollingCacheEnabled -> r
    boolean mPopulatePending -> s
    boolean mScrolling -> t
    int mOffscreenPageLimit -> u
    boolean mIsBeingDragged -> v
    boolean mIsUnableToDrag -> w
    int mTouchSlop -> x
    float mInitialMotionX -> y
    float mLastMotionX -> z
    float mLastMotionY -> A
    int mActivePointerId -> B
    android.view.VelocityTracker mVelocityTracker -> C
    int mMinimumVelocity -> D
    int mMaximumVelocity -> E
    int mFlingDistance -> F
    boolean mFakeDragging -> G
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> H
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> I
    boolean mFirstLayout -> J
    boolean mCalledSuper -> K
    int mDecorChildCount -> L
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> M
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> N
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> O
    int mScrollState -> P
    void setScrollState(int) -> a
    android.support.v4.view.PagerAdapter getAdapter() -> a
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> a
    void setCurrentItem$2563266(int) -> b
    int getCurrentItem() -> b
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> a
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    void addNewItem$255f295(int) -> c
    void populate() -> d
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    android.support.v4.view.ViewPager$ItemInfo infoForChild$31e08638() -> e
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    void pageScrolled(int) -> d
    void completeScroll() -> f
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> g
    void setScrollingCacheEnabled(boolean) -> a
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean arrowScroll(int) -> e
    boolean pageLeft() -> h
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$100() -> c
android.support.v4.view.ViewPager$1 -> android.support.v4.view.x:
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.y:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.z:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.aa:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> a
    int gravity -> b
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ab:
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ac:
    void onPageScrolled$486775f1(int,float) -> a
    void onPageSelected$13462e() -> a
    void onPageScrollStateChanged(int) -> a
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ad:
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.d.a:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.d.b:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.d.c:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.d.d:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
com.actionbarsherlock.ActionBarSherlock -> com.actionbarsherlock.a:
    java.lang.Class[] CONSTRUCTOR_ARGS -> d
    java.util.HashMap IMPLEMENTATIONS -> e
    android.app.Activity mActivity -> a
    boolean mIsDelegate -> b
    com.actionbarsherlock.view.MenuInflater mMenuInflater -> c
    void registerImplementation(java.lang.Class) -> a
    com.actionbarsherlock.ActionBarSherlock wrap$6f7a35aa(android.app.Activity) -> a
    com.actionbarsherlock.app.ActionBar getActionBar() -> a
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchPostResume() -> b
    void dispatchPause() -> c
    void dispatchStop() -> d
    void dispatchInvalidateOptionsMenu() -> e
    boolean dispatchOpenOptionsMenu() -> f
    boolean dispatchCloseOptionsMenu() -> g
    void dispatchPostCreate$79e5e33f() -> h
    void dispatchTitleChanged$609be50a(java.lang.CharSequence) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> a
    boolean dispatchCreateOptionsMenu(android.view.Menu) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> b
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchMenuOpened$2fef5512(int) -> a
    void dispatchPanelClosed$2fef5516(int) -> b
    void dispatchDestroy() -> i
    boolean callbackCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> a
    boolean callbackPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> b
    boolean callbackOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> a
    void setContentView(int) -> c
    void setContentView(android.view.View) -> a
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    com.actionbarsherlock.view.MenuInflater getMenuInflater() -> j
    android.content.Context getThemedContext() -> k
com.actionbarsherlock.ActionBarSherlock$Implementation -> com.actionbarsherlock.b:
    int api() -> a
    int dpi() -> b
com.actionbarsherlock.ActionBarSherlock$OnCreateOptionsMenuListener -> com.actionbarsherlock.c:
    boolean onCreateOptionsMenu$7c622cda() -> a
com.actionbarsherlock.ActionBarSherlock$OnCreatePanelMenuListener -> com.actionbarsherlock.d:
    boolean onCreatePanelMenu$753e82bf(com.actionbarsherlock.view.Menu) -> a
com.actionbarsherlock.ActionBarSherlock$OnMenuItemSelectedListener -> com.actionbarsherlock.e:
    boolean onMenuItemSelected$7350e552(com.actionbarsherlock.view.MenuItem) -> a
com.actionbarsherlock.ActionBarSherlock$OnOptionsItemSelectedListener -> com.actionbarsherlock.f:
    boolean onOptionsItemSelected$58cc55c7() -> a
com.actionbarsherlock.ActionBarSherlock$OnPrepareOptionsMenuListener -> com.actionbarsherlock.g:
    boolean onPrepareOptionsMenu$7c622cda() -> a
com.actionbarsherlock.ActionBarSherlock$OnPreparePanelListener -> com.actionbarsherlock.h:
    boolean onPreparePanel$5631e5b5$753e82bf(com.actionbarsherlock.view.Menu) -> b
com.actionbarsherlock.R -> com.actionbarsherlock.i:
com.actionbarsherlock.R$attr -> com.actionbarsherlock.j:
    int actionOverflowButtonStyle -> a
    int actionModeStyle -> b
    int actionBarTabTextStyle -> c
    int dropDownListViewStyle -> d
    int actionBarStyle -> e
    int actionBarWidgetTheme -> f
    int listPopupWindowStyle -> g
    int popupMenuStyle -> h
    int actionDropDownStyle -> i
com.actionbarsherlock.R$bool -> com.actionbarsherlock.k:
    int abs__config_allowActionMenuItemTextWithIcon -> a
    int abs__action_bar_expanded_action_views_exclusive -> b
    int abs__config_showMenuShortcutsWhenKeyboardPresent -> c
    int abs__action_bar_embed_tabs -> d
    int abs__split_action_bar_is_narrow -> e
com.actionbarsherlock.R$dimen -> com.actionbarsherlock.l:
    int abs__config_prefDialogWidth -> a
com.actionbarsherlock.R$id -> com.actionbarsherlock.m:
    int abs__image -> a
    int abs__content -> b
    int abs__action_bar_container -> c
    int abs__icon -> d
    int abs__action_bar -> e
    int abs__default_activity_button -> f
    int abs__imageButton -> g
    int abs__action_bar_subtitle -> h
    int abs__activity_chooser_view_content -> i
    int abs__title -> j
    int abs__up -> k
    int abs__progress_circular -> l
    int abs__split_action_bar -> m
    int abs__action_context_bar -> n
    int abs__list_item -> o
    int abs__progress_horizontal -> p
    int abs__action_bar_title -> q
    int abs__shortcut -> r
    int abs__action_menu_presenter -> s
    int abs__textButton -> t
    int abs__home -> u
    int abs__expand_activities_button -> v
com.actionbarsherlock.R$integer -> com.actionbarsherlock.n:
    int abs__max_action_buttons -> a
com.actionbarsherlock.R$layout -> com.actionbarsherlock.o:
    int abs__list_menu_item_radio -> a
    int abs__activity_chooser_view_list_item -> b
    int abs__dialog_title_holo -> c
    int abs__screen_simple_overlay_action_mode -> d
    int abs__screen_action_bar -> e
    int abs__action_menu_layout -> f
    int abs__screen_action_bar_overlay -> g
    int abs__action_bar_title_item -> h
    int abs__list_menu_item_checkbox -> i
    int abs__list_menu_item_icon -> j
    int abs__screen_simple -> k
    int abs__activity_chooser_view -> l
    int abs__popup_menu_item_layout -> m
    int abs__action_bar_home -> n
    int abs__action_menu_item_layout -> o
    int abs__action_bar_tab -> p
com.actionbarsherlock.R$string -> com.actionbarsherlock.p:
    int abs__activitychooserview_choose_application -> a
    int abs__action_bar_up_description -> b
    int abs__action_bar_home_description -> c
    int abs__activity_chooser_view_see_all -> d
com.actionbarsherlock.R$styleable -> com.actionbarsherlock.q:
    int[] SherlockTheme -> a
    int[] SherlockMenuGroup -> b
    int[] SherlockActionBar -> c
    int[] SherlockActionMenuItemView -> d
    int[] SherlockActivityChooserView -> e
    int[] SherlockMenuItem -> f
    int[] SherlockActionMode -> g
    int[] SherlockMenuView -> h
    int[] SherlockSpinner -> i
com.actionbarsherlock.app.ActionBar -> com.actionbarsherlock.app.ActionBar:
    void setCustomView$13462e() -> a
    void setDisplayShowHomeEnabled(boolean) -> a
    void setDisplayHomeAsUpEnabled$1385ff() -> b
    void setDisplayShowCustomEnabled$1385ff() -> c
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> a
    void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> b
    void show() -> d
    void hide() -> e
    android.content.Context getThemedContext() -> f
com.actionbarsherlock.app.ActionBar$LayoutParams -> com.actionbarsherlock.app.ActionBar$LayoutParams:
    int gravity -> a
com.actionbarsherlock.app.ActionBar$OnNavigationListener -> com.actionbarsherlock.app.a:
    boolean onNavigationItemSelected$255f65a() -> a
com.actionbarsherlock.app.ActionBar$Tab -> com.actionbarsherlock.app.b:
    android.graphics.drawable.Drawable getIcon() -> a
    java.lang.CharSequence getText() -> b
    android.view.View getCustomView() -> c
    java.lang.CharSequence getContentDescription() -> d
com.actionbarsherlock.app.SherlockActivity -> com.actionbarsherlock.app.SherlockActivity:
    com.actionbarsherlock.ActionBarSherlock mSherlock -> a
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
com.actionbarsherlock.app.SherlockExpandableListActivity -> com.actionbarsherlock.app.SherlockExpandableListActivity:
    com.actionbarsherlock.ActionBarSherlock mSherlock -> a
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
com.actionbarsherlock.app.SherlockFragmentActivity -> com.actionbarsherlock.app.SherlockFragmentActivity:
    com.actionbarsherlock.ActionBarSherlock mSherlock -> m
    boolean mIgnoreNativeCreate -> n
    boolean mIgnoreNativePrepare -> o
    boolean mIgnoreNativeSelected -> p
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> f
    com.actionbarsherlock.app.ActionBar getSupportActionBar() -> e
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> d
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    void supportInvalidateOptionsMenu() -> a
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> c
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> d
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> b
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
com.actionbarsherlock.app.SherlockListActivity -> com.actionbarsherlock.app.SherlockListActivity:
    com.actionbarsherlock.ActionBarSherlock mSherlock -> a
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
com.actionbarsherlock.app.SherlockPreferenceActivity -> com.actionbarsherlock.app.SherlockPreferenceActivity:
    com.actionbarsherlock.ActionBarSherlock mSherlock -> a
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
com.actionbarsherlock.internal.ActionBarSherlockCompat -> com.actionbarsherlock.internal.a:
    boolean mReserveOverflow -> e
    boolean mReserveOverflowSet -> f
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> g
    java.util.HashMap mNativeItemMap -> d
    boolean mMenuKeyIsLongPress -> h
    android.view.ViewGroup mDecor -> i
    android.view.ViewGroup mContentParent -> j
    boolean mIsTitleReady -> k
    boolean mIsDestroyed -> l
    boolean mClosingActionMenu -> m
    boolean mMenuIsPrepared -> n
    boolean mMenuRefreshContent -> o
    android.os.Bundle mMenuFrozenActionViewState -> p
    com.actionbarsherlock.internal.app.ActionBarImpl aActionBar -> q
    com.actionbarsherlock.internal.widget.ActionBarView wActionBar -> r
    int mFeatures -> s
    int mUiOptions -> t
    com.actionbarsherlock.internal.widget.IcsProgressBar mCircularProgressBar -> u
    com.actionbarsherlock.view.ActionMode mActionMode -> v
    com.actionbarsherlock.internal.widget.ActionBarContextView mActionModeView -> w
    android.widget.TextView mTitleView -> x
    java.lang.CharSequence mTitle -> y
    boolean mIsFloating -> z
    com.actionbarsherlock.app.ActionBar getActionBar() -> a
    void initActionBar() -> m
    android.content.Context getThemedContext() -> k
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchPostResume() -> b
    void dispatchPause() -> c
    void dispatchStop() -> d
    void dispatchInvalidateOptionsMenu() -> e
    boolean dispatchOpenOptionsMenu() -> f
    boolean dispatchCloseOptionsMenu() -> g
    void dispatchPostCreate$79e5e33f() -> h
    boolean dispatchCreateOptionsMenu(android.view.Menu) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> b
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchMenuOpened$2fef5512(int) -> a
    void dispatchPanelClosed$2fef5516(int) -> b
    void dispatchTitleChanged$609be50a(java.lang.CharSequence) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> a
    void dispatchDestroy() -> i
    boolean preparePanel() -> n
    boolean onMenuItemSelected$5f8dddaf(com.actionbarsherlock.view.MenuItem) -> b
    void onMenuModeChange$26b6228d() -> l
    boolean onOpenSubMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    void onCloseMenu$4ff11e19(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> b
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    boolean onMenuItemSelected$7350e552(com.actionbarsherlock.view.MenuItem) -> c
    boolean hasFeature(int) -> d
    boolean requestFeature(int) -> e
    void setContentView(int) -> c
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    void installDecor() -> o
    boolean isReservingOverflow() -> p
    int loadUiOptionsFromManifest(android.app.Activity) -> b
    java.lang.String cleanActivityName(java.lang.String,java.lang.String) -> a
    android.app.Activity access$1(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> a
    boolean access$4(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> b
    com.actionbarsherlock.internal.view.menu.MenuBuilder access$5(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> c
com.actionbarsherlock.internal.ActionBarSherlockCompat$1 -> com.actionbarsherlock.internal.b:
    com.actionbarsherlock.internal.ActionBarSherlockCompat this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.ActionBarSherlockNative -> com.actionbarsherlock.internal.c:
    com.actionbarsherlock.internal.app.ActionBarWrapper mActionBar -> d
    com.actionbarsherlock.internal.view.menu.MenuWrapper mMenu -> e
    com.actionbarsherlock.app.ActionBar getActionBar() -> a
    void initActionBar() -> l
    void dispatchInvalidateOptionsMenu() -> e
    boolean dispatchCreateOptionsMenu(android.view.Menu) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> b
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    void setContentView(int) -> c
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    android.content.Context getThemedContext() -> k
com.actionbarsherlock.internal.ResourcesCompat -> com.actionbarsherlock.internal.d:
    boolean getResources_getBoolean(android.content.Context,int) -> a
    int getResources_getInteger(android.content.Context,int) -> b
com.actionbarsherlock.internal.app.ActionBarImpl -> com.actionbarsherlock.internal.a.a:
    android.content.Context mContext -> g
    android.content.Context mThemedContext -> h
    android.app.Activity mActivity -> i
    com.actionbarsherlock.internal.widget.ActionBarContainer mContainerView -> j
    com.actionbarsherlock.internal.widget.ActionBarView mActionView -> k
    com.actionbarsherlock.internal.widget.ActionBarContextView mContextView -> l
    com.actionbarsherlock.internal.widget.ActionBarContainer mSplitView -> m
    com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout mContentView -> n
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView mTabScrollView -> o
    java.util.ArrayList mTabs -> p
    int mSavedTabPosition -> q
    com.actionbarsherlock.view.ActionMode mDeferredDestroyActionMode -> a
    com.actionbarsherlock.view.ActionMode$Callback mDeferredModeDestroyCallback -> b
    boolean mLastMenuVisibility -> r
    java.util.ArrayList mMenuVisibilityListeners -> s
    int mContextDisplayMode -> t
    boolean mHasEmbeddedTabs -> u
    android.os.Handler mHandler -> c
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mCurrentShowAnim -> v
    boolean mShowHideAnimationEnabled -> w
    boolean mWasHiddenBeforeMode -> d
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener mHideListener -> e
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener mShowListener -> f
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void setHasEmbeddedTabs(boolean) -> d
    void setShowHideAnimationEnabled(boolean) -> b
    void dispatchMenuVisibilityChanged(boolean) -> c
    void setCustomView$13462e() -> a
    void setDisplayShowHomeEnabled(boolean) -> a
    void setDisplayHomeAsUpEnabled$1385ff() -> b
    void setDisplayShowCustomEnabled$1385ff() -> c
    void setDisplayOptions(int,int) -> a
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> a
    void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> b
    void show() -> d
    void hide() -> e
    android.content.Context getThemedContext() -> f
    com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout access$0(com.actionbarsherlock.internal.app.ActionBarImpl) -> a
    com.actionbarsherlock.internal.widget.ActionBarContainer access$1(com.actionbarsherlock.internal.app.ActionBarImpl) -> b
    com.actionbarsherlock.internal.widget.ActionBarContainer access$2(com.actionbarsherlock.internal.app.ActionBarImpl) -> c
    int access$3(com.actionbarsherlock.internal.app.ActionBarImpl) -> d
    void access$4$5d9160e6(com.actionbarsherlock.internal.app.ActionBarImpl) -> e
com.actionbarsherlock.internal.app.ActionBarImpl$1 -> com.actionbarsherlock.internal.a.b:
    com.actionbarsherlock.internal.app.ActionBarImpl this$0 -> a
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
com.actionbarsherlock.internal.app.ActionBarImpl$2 -> com.actionbarsherlock.internal.a.c:
    com.actionbarsherlock.internal.app.ActionBarImpl this$0 -> a
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
com.actionbarsherlock.internal.app.ActionBarWrapper -> com.actionbarsherlock.internal.a.d:
    android.app.Activity mActivity -> a
    android.app.ActionBar mActionBar -> b
    com.actionbarsherlock.app.ActionBar$OnNavigationListener mNavigationListener -> c
    java.util.Set mMenuVisibilityListeners -> d
    android.content.Context getThemedContext() -> f
    void setCustomView$13462e() -> a
    boolean onNavigationItemSelected(int,long) -> onNavigationItemSelected
    void setDisplayShowHomeEnabled(boolean) -> a
    void setDisplayHomeAsUpEnabled$1385ff() -> b
    void setDisplayShowCustomEnabled$1385ff() -> c
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> a
    void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> b
    void show() -> d
    void hide() -> e
    void onMenuVisibilityChanged(boolean) -> onMenuVisibilityChanged
com.actionbarsherlock.internal.nineoldandroids.animation.Animator -> com.actionbarsherlock.internal.nineoldandroids.a.a:
    java.util.ArrayList mListeners -> a
    void start() -> a
    void cancel() -> b
    void end() -> c
    void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener) -> a
    void removeListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener) -> b
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone() -> d
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener -> com.actionbarsherlock.internal.nineoldandroids.a.b:
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> b
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
    void onAnimationCancel$56c33a5() -> a
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorListenerAdapter -> com.actionbarsherlock.internal.nineoldandroids.a.c:
    void onAnimationCancel$56c33a5() -> a
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> b
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet -> com.actionbarsherlock.internal.nineoldandroids.a.d:
    java.util.ArrayList mPlayingSet -> c
    java.util.HashMap mNodeMap -> d
    java.util.ArrayList mNodes -> e
    java.util.ArrayList mSortedNodes -> f
    boolean mNeedsSort -> g
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener mSetListener -> h
    boolean mTerminated -> b
    boolean mStarted -> i
    long mStartDelay -> j
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator mDelayAnim -> k
    long mDuration -> l
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder play(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
    void cancel() -> b
    void end() -> c
    void start() -> a
    void sortNodes() -> e
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone() -> d
    java.util.ArrayList access$2(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> a
    java.util.HashMap access$3(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> b
    java.util.ArrayList access$4(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> c
    void access$5$5b14e955(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> d
    java.util.ArrayList access$6(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> e
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$1 -> com.actionbarsherlock.internal.nineoldandroids.a.e:
    boolean canceled -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet this$0 -> b
    java.util.ArrayList val$nodesToStart -> c
    void onAnimationCancel$56c33a5() -> a
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener -> com.actionbarsherlock.internal.nineoldandroids.a.f:
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet mAnimatorSet -> b
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet this$0 -> a
    void onAnimationCancel$56c33a5() -> a
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> b
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder -> com.actionbarsherlock.internal.nineoldandroids.a.g:
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node mCurrentNode -> b
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet this$0 -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder with(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency -> com.actionbarsherlock.internal.nineoldandroids.a.h:
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node node -> a
    int rule -> b
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$DependencyListener -> com.actionbarsherlock.internal.nineoldandroids.a.i:
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet mAnimatorSet -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node mNode -> b
    int mRule -> c
    void onAnimationCancel$56c33a5() -> a
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> b
    void startIfReady(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> c
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node -> com.actionbarsherlock.internal.nineoldandroids.a.j:
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator animation -> a
    java.util.ArrayList dependencies -> b
    java.util.ArrayList tmpDependencies -> c
    java.util.ArrayList nodeDependencies -> d
    java.util.ArrayList nodeDependents -> e
    boolean done -> f
    void addDependency(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node clone() -> a
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.FloatEvaluator -> com.actionbarsherlock.internal.nineoldandroids.a.k:
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> a
com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet -> com.actionbarsherlock.internal.nineoldandroids.a.l:
    float firstValue -> g
    float lastValue -> h
    float deltaValue -> i
    boolean firstTime -> j
    java.lang.Object getValue(float) -> a
    float getFloatValue(float) -> b
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet clone() -> a
com.actionbarsherlock.internal.nineoldandroids.animation.IntEvaluator -> com.actionbarsherlock.internal.nineoldandroids.a.m:
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> a
com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe -> com.actionbarsherlock.internal.nineoldandroids.a.n:
    float mFraction -> a
    java.lang.Class mValueType -> b
    android.view.animation.Interpolator mInterpolator -> d
    boolean mHasValue -> c
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofFloat(float,float) -> a
    java.lang.Object getValue() -> a
    void setValue(java.lang.Object) -> a
    float getFraction() -> b
    android.view.animation.Interpolator getInterpolator() -> c
    void setInterpolator(android.view.animation.Interpolator) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe clone() -> d
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe -> com.actionbarsherlock.internal.nineoldandroids.a.o:
    float mValue -> d
    float getFloatValue() -> e
    java.lang.Object getValue() -> a
    void setValue(java.lang.Object) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe clone() -> d
com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet -> com.actionbarsherlock.internal.nineoldandroids.a.p:
    int mNumKeyframes -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe mFirstKeyframe -> b
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe mLastKeyframe -> c
    android.view.animation.Interpolator mInterpolator -> d
    java.util.ArrayList mKeyframes -> e
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator mEvaluator -> f
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet clone() -> a
    java.lang.Object getValue(float) -> a
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator -> com.actionbarsherlock.internal.nineoldandroids.a.q:
    java.lang.Object mTarget -> h
    java.lang.String mPropertyName -> i
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[]) -> a
    void setFloatValues(float[]) -> a
    void start() -> a
    void initAnimation() -> e
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator setDuration(long) -> a
    void animateValue(float) -> a
    java.lang.String toString() -> toString
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator clone() -> f
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator setDuration(long) -> b
com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder -> com.actionbarsherlock.internal.nineoldandroids.a.r:
    java.lang.String mPropertyName -> a
    java.lang.reflect.Method mSetter -> b
    java.lang.reflect.Method mGetter -> g
    java.lang.Class mValueType -> c
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet mKeyframeSet -> d
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator sIntEvaluator -> h
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator sFloatEvaluator -> i
    java.lang.Class[] FLOAT_VARIANTS -> j
    java.lang.Class[] INTEGER_VARIANTS -> k
    java.lang.Class[] DOUBLE_VARIANTS -> l
    java.util.HashMap sSetterPropertyMap -> m
    java.util.HashMap sGetterPropertyMap -> n
    java.util.concurrent.locks.ReentrantReadWriteLock mPropertyMapLock -> e
    java.lang.Object[] mTmpValueArray -> f
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator mEvaluator -> o
    java.lang.Object mAnimatedValue -> p
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofFloat(java.lang.String,float[]) -> a
    void setFloatValues(float[]) -> a
    java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class) -> a
    java.lang.reflect.Method setupSetterOrGetter(java.lang.Class,java.util.HashMap,java.lang.String,java.lang.Class) -> a
    void setupSetter(java.lang.Class) -> a
    void setupSetterAndGetter(java.lang.Object) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone() -> a
    void setAnimatedValue(java.lang.Object) -> b
    void init() -> b
    void calculateValue(float) -> a
    void setPropertyName(java.lang.String) -> a
    java.lang.String getPropertyName() -> c
    java.lang.Object getAnimatedValue() -> d
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder -> com.actionbarsherlock.internal.nineoldandroids.a.s:
    com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet mFloatKeyframeSet -> g
    float mFloatAnimatedValue -> h
    void setFloatValues(float[]) -> a
    void calculateValue(float) -> a
    java.lang.Object getAnimatedValue() -> d
    void setAnimatedValue(java.lang.Object) -> b
    void setupSetter(java.lang.Class) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone() -> a
com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator -> com.actionbarsherlock.internal.nineoldandroids.a.t:
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> a
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator -> com.actionbarsherlock.internal.nineoldandroids.a.u:
    long mStartTime -> b
    long mSeekTime -> c
    java.lang.ThreadLocal sAnimationHandler -> h
    java.lang.ThreadLocal sAnimations -> i
    java.lang.ThreadLocal sPendingAnimations -> j
    java.lang.ThreadLocal sDelayedAnims -> k
    java.lang.ThreadLocal sEndingAnims -> l
    java.lang.ThreadLocal sReadyAnims -> m
    android.view.animation.Interpolator sDefaultInterpolator -> n
    boolean mPlayingBackwards -> o
    int mCurrentIteration -> p
    float mCurrentFraction -> q
    boolean mStartedDelay -> r
    long mDelayStartTime -> s
    int mPlayingState -> d
    boolean mRunning -> t
    boolean mStarted -> u
    boolean mInitialized -> e
    long mDuration -> v
    long mStartDelay -> w
    long sFrameDelay -> x
    int mRepeatCount -> y
    int mRepeatMode -> z
    android.view.animation.Interpolator mInterpolator -> A
    java.util.ArrayList mUpdateListeners -> B
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[] mValues -> f
    java.util.HashMap mValuesMap -> g
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofFloat(float[]) -> b
    void setFloatValues(float[]) -> a
    void setValues(com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[]) -> a
    void initAnimation() -> e
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator setDuration(long) -> b
    void setCurrentPlayTime(long) -> a
    void setStartDelay(long) -> c
    void setInterpolator(android.view.animation.Interpolator) -> a
    void start() -> a
    void cancel() -> b
    void end() -> c
    boolean isRunning() -> g
    void endAnimation() -> n
    void startAnimation() -> o
    boolean animationFrame(long) -> d
    void animateValue(float) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator clone() -> f
    java.lang.String toString() -> toString
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone() -> d
    java.lang.ThreadLocal access$2() -> h
    java.lang.ThreadLocal access$3() -> i
    java.lang.ThreadLocal access$4() -> j
    long access$5(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> a
    void access$6(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> b
    java.lang.ThreadLocal access$7() -> k
    java.lang.ThreadLocal access$8() -> l
    boolean access$9(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator,long) -> a
    void access$10$2c3b1aa8(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> c
    void access$11(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> d
    long access$12() -> m
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$1 -> com.actionbarsherlock.internal.nineoldandroids.a.v:
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$2 -> com.actionbarsherlock.internal.nineoldandroids.a.w:
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$3 -> com.actionbarsherlock.internal.nineoldandroids.a.x:
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$4 -> com.actionbarsherlock.internal.nineoldandroids.a.y:
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$5 -> com.actionbarsherlock.internal.nineoldandroids.a.z:
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler -> com.actionbarsherlock.internal.nineoldandroids.a.aa:
    void handleMessage(android.os.Message) -> handleMessage
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener -> com.actionbarsherlock.internal.nineoldandroids.a.ab:
com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup -> com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> a
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getTranslationX() -> getTranslationX
    void setTranslationX(float) -> setTranslationX
    float getTranslationY() -> getTranslationY
    void setTranslationY(float) -> setTranslationY
com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy -> com.actionbarsherlock.internal.nineoldandroids.view.a.a:
    boolean NEEDS_PROXY -> a
    java.util.WeakHashMap PROXIES -> b
    java.lang.ref.WeakReference mView -> c
    float mAlpha -> d
    float mScaleX -> e
    float mScaleY -> f
    float mTranslationX -> g
    float mTranslationY -> h
    android.graphics.RectF mBefore -> i
    android.graphics.RectF mAfter -> j
    android.graphics.Matrix mTempMatrix -> k
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View) -> a
    float getAlpha() -> a
    void setAlpha(float) -> a
    void setScaleY$133aeb() -> b
    float getTranslationX() -> c
    void setTranslationX(float) -> b
    float getTranslationY() -> d
    void setTranslationY(float) -> c
    void prepareForUpdate() -> e
    void invalidateAfterUpdate() -> f
    void computeRect(android.graphics.RectF,android.view.View) -> a
    void transformMatrix(android.graphics.Matrix,android.view.View) -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
    void reset() -> reset
com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout -> com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> a
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getTranslationY() -> getTranslationY
    void setTranslationY(float) -> setTranslationY
com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView -> com.actionbarsherlock.internal.nineoldandroids.widget.a:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> a
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout -> com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> a
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getTranslationX() -> getTranslationX
    void setTranslationX(float) -> setTranslationX
com.actionbarsherlock.internal.view.ActionProviderWrapper -> com.actionbarsherlock.internal.view.a:
    com.actionbarsherlock.view.ActionProvider mProvider -> a
    com.actionbarsherlock.view.ActionProvider unwrap() -> a
    android.view.View onCreateActionView() -> onCreateActionView
    boolean hasSubMenu() -> hasSubMenu
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
com.actionbarsherlock.internal.view.View_HasStateListenerSupport -> com.actionbarsherlock.internal.view.b:
    void addOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> a
    void removeOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> b
com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener -> com.actionbarsherlock.internal.view.c:
    void onViewDetachedFromWindow(android.view.View) -> a
com.actionbarsherlock.internal.view.menu.ActionMenuItem -> com.actionbarsherlock.internal.view.menu.a:
    int mId -> a
    int mGroup -> b
    int mOrdering -> c
    java.lang.CharSequence mTitle -> d
    java.lang.CharSequence mTitleCondensed -> e
    char mShortcutNumericChar -> f
    char mShortcutAlphabeticChar -> g
    android.graphics.drawable.Drawable mIconDrawable -> h
    android.content.Context mContext -> i
    com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener mClickListener -> j
    int mFlags -> k
    int getGroupId() -> a
    android.graphics.drawable.Drawable getIcon() -> b
    int getItemId() -> c
    com.actionbarsherlock.view.SubMenu getSubMenu() -> d
    boolean hasSubMenu() -> e
    boolean isVisible() -> f
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> a
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> a
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> b
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> c
    com.actionbarsherlock.view.MenuItem setIcon(int) -> a
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> b
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> a
    com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence) -> a
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> b
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> d
    void setShowAsAction(int) -> b
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> a
    android.view.View getActionView() -> g
    com.actionbarsherlock.view.MenuItem setActionView(int) -> c
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> h
    com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider) -> a
    boolean expandActionView() -> i
    boolean isActionViewExpanded() -> j
com.actionbarsherlock.internal.view.menu.ActionMenuItemView -> com.actionbarsherlock.internal.view.menu.ActionMenuItemView:
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mItemData -> a
    java.lang.CharSequence mTitle -> b
    com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker mItemInvoker -> c
    android.widget.ImageButton mImageButton -> d
    com.actionbarsherlock.internal.widget.CapitalizingButton mTextButton -> e
    boolean mAllowTextWithIcon -> f
    boolean mExpandedFormat -> g
    int mMinWidth -> h
    java.util.Set mListeners -> i
    void addOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> a
    void removeOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onFinishInflate() -> onFinishInflate
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItemData() -> a
    void initialize$679020ce(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    void setEnabled(boolean) -> setEnabled
    void onClick(android.view.View) -> onClick
    void setItemInvoker(com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker) -> a
    boolean prefersCondensedTitle() -> b
    void updateTextButtonVisibility() -> f
    boolean hasText() -> c
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    boolean needsDividerBefore() -> d
    boolean needsDividerAfter() -> e
    boolean onLongClick(android.view.View) -> onLongClick
    void onMeasure(int,int) -> onMeasure
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter:
    android.view.View mOverflowButton -> i
    boolean mReserveOverflow -> j
    boolean mReserveOverflowSet -> k
    int mWidthLimit -> l
    int mActionItemWidthLimit -> m
    int mMaxItems -> n
    boolean mMaxItemsSet -> o
    boolean mStrictWidthLimit -> p
    boolean mWidthLimitSet -> q
    boolean mExpandedActionViewsExclusive -> r
    int mMinCellSize -> s
    android.util.SparseBooleanArray mActionButtonGroups -> t
    android.view.View mScrapActionButtonView -> u
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup mOverflowPopup -> v
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup -> w
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable -> x
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback mPopupPresenterCallback -> a
    int mOpenSubMenuId -> b
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    boolean reserveOverflow(android.content.Context) -> a
    void onConfigurationChanged$308b225b() -> a
    void setWidthLimit$2563266(int) -> a
    void setItemLimit$13462e() -> b
    void setExpandedActionViewsExclusive(boolean) -> a
    com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> a
    android.view.View getItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> a
    void bindItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,com.actionbarsherlock.internal.view.menu.MenuView$ItemView) -> a
    boolean shouldIncludeItem$2525e600(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    void updateMenuView(boolean) -> b
    boolean filterLeftoverView(android.view.ViewGroup,int) -> a
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> a
    boolean showOverflowMenu() -> c
    boolean hideOverflowMenu() -> d
    boolean dismissPopupMenus() -> e
    boolean hideSubMenus() -> f
    boolean isOverflowMenuShowing() -> g
    boolean isOverflowReserved() -> h
    boolean flagActionItems() -> i
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> a
    void onSubUiVisibilityChanged(boolean) -> c
    void access$0(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup) -> a
    android.view.View access$1(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter) -> a
    void access$2$581ac05c(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter) -> b
    void access$3$2bf38d4(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter) -> c
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu -> com.actionbarsherlock.internal.view.menu.b:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> a
    void onDismiss() -> onDismiss
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable -> com.actionbarsherlock.internal.view.menu.c:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup mPopup -> b
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowMenuButton -> com.actionbarsherlock.internal.view.menu.d:
    java.util.Set mListeners -> b
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> a
    boolean performClick() -> performClick
    boolean needsDividerBefore() -> d
    boolean needsDividerAfter() -> e
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void addOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> a
    void removeOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> b
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup -> com.actionbarsherlock.internal.view.menu.e:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> a
    void onDismiss() -> onDismiss
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback -> com.actionbarsherlock.internal.view.menu.f:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> a
    boolean onOpenSubMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    void onCloseMenu$4ff11e19(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> b
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState:
    int openSubMenuId -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState$1 -> com.actionbarsherlock.internal.view.menu.g:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.actionbarsherlock.internal.view.menu.ActionMenuView -> com.actionbarsherlock.internal.view.menu.ActionMenuView:
    boolean IS_FROYO -> a
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> b
    boolean mReserveOverflow -> c
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter mPresenter -> d
    boolean mFormatItems -> e
    int mFormatItemsWidth -> f
    int mMinCellSize -> g
    int mGeneratedItemPadding -> h
    boolean mFirst -> i
    void setPresenter(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    int measureChildForCells(android.view.View,int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setOverflowReserved(boolean) -> a
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> b
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> a
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> a
    boolean invokeItem(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    void initialize(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    boolean hasDividerBeforeChildAt(int) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
com.actionbarsherlock.internal.view.menu.ActionMenuView$ActionMenuChildView -> com.actionbarsherlock.internal.view.menu.h:
    boolean needsDividerBefore() -> d
    boolean needsDividerAfter() -> e
com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams -> com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams:
    boolean isOverflowButton -> a
    int cellsUsed -> b
    int extraPixels -> c
    boolean expandable -> d
    boolean preventEdgeOffset -> e
    boolean expanded -> f
com.actionbarsherlock.internal.view.menu.BaseMenuPresenter -> com.actionbarsherlock.internal.view.menu.i:
    boolean IS_HONEYCOMB -> a
    android.content.Context mSystemContext -> c
    android.content.Context mContext -> d
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> e
    android.view.LayoutInflater mSystemInflater -> f
    android.view.LayoutInflater mInflater -> g
    com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback mCallback -> b
    int mMenuLayoutRes -> i
    int mItemLayoutRes -> j
    com.actionbarsherlock.internal.view.menu.MenuView mMenuView -> h
    int mId -> k
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> a
    void updateMenuView(boolean) -> b
    boolean filterLeftoverView(android.view.ViewGroup,int) -> a
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> a
    android.view.View getItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> a
    void bindItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,com.actionbarsherlock.internal.view.menu.MenuView$ItemView) -> a
    boolean shouldIncludeItem$2525e600(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> a
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> a
    boolean flagActionItems() -> i
    boolean expandItemActionView$2d5bb53f(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> b
    boolean collapseItemActionView$2d5bb53f(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> c
    void setId(int) -> b
com.actionbarsherlock.internal.view.menu.ListMenuItemView -> com.actionbarsherlock.internal.view.menu.ListMenuItemView:
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mItemData -> b
    android.widget.ImageView mIconView -> c
    android.widget.RadioButton mRadioButton -> d
    android.widget.TextView mTitleView -> e
    android.widget.CheckBox mCheckBox -> f
    android.widget.TextView mShortcutView -> g
    android.graphics.drawable.Drawable mBackground -> h
    int mTextAppearance -> i
    android.content.Context mTextAppearanceContext -> j
    boolean mPreserveIconSpacing -> k
    android.view.LayoutInflater mInflater -> l
    boolean mForceShowIcon -> m
    android.content.Context mContext -> a
    void onFinishInflate() -> onFinishInflate
    void initialize$679020ce(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    void setForceShowIcon$1385ff() -> c
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItemData() -> a
    void onMeasure(int,int) -> onMeasure
    boolean prefersCondensedTitle() -> b
    android.view.LayoutInflater getInflater() -> d
com.actionbarsherlock.internal.view.menu.MenuBuilder -> com.actionbarsherlock.internal.view.menu.j:
    int[] sCategoryToOrder -> c
    android.content.Context mContext -> d
    android.content.res.Resources mResources -> e
    boolean mQwertyMode -> f
    boolean mShortcutsVisible -> g
    com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback mCallback -> h
    java.util.ArrayList mItems -> i
    java.util.ArrayList mVisibleItems -> j
    boolean mIsVisibleItemsStale -> k
    java.util.ArrayList mActionItems -> l
    java.util.ArrayList mNonActionItems -> m
    boolean mIsActionItemsStale -> n
    int mDefaultShowAsAction -> o
    android.view.ContextMenu$ContextMenuInfo mCurrentMenuInfo -> p
    java.lang.CharSequence mHeaderTitle -> a
    android.view.View mHeaderView -> b
    boolean mPreventDispatchingItemsChanged -> q
    boolean mItemsChangedWhileDispatchPrevented -> r
    boolean mOptionalIconsVisible -> s
    boolean mIsClosing -> t
    java.util.ArrayList mTempShortcutItemList -> u
    java.util.concurrent.CopyOnWriteArrayList mPresenters -> v
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mExpandedItem -> w
    void addMenuPresenter(com.actionbarsherlock.internal.view.menu.MenuPresenter) -> a
    void removeMenuPresenter(com.actionbarsherlock.internal.view.menu.MenuPresenter) -> b
    void saveActionViewStates(android.os.Bundle) -> a
    void restoreActionViewStates(android.os.Bundle) -> b
    java.lang.String getActionViewStatesKey() -> a
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback) -> a
    com.actionbarsherlock.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> c
    com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence) -> a
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> b
    void clear() -> b
    void setExclusiveItemChecked(com.actionbarsherlock.view.MenuItem) -> a
    void setGroupCheckable$4870cd2e(int) -> a
    boolean hasVisibleItems() -> c
    com.actionbarsherlock.view.MenuItem findItem(int) -> b
    int size() -> d
    com.actionbarsherlock.view.MenuItem getItem(int) -> c
    void setQwertyMode(boolean) -> a
    boolean isQwertyMode() -> e
    boolean isShortcutsVisible() -> f
    android.content.res.Resources getResources() -> g
    android.content.Context getContext() -> h
    boolean dispatchMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> a
    void changeMenuMode() -> i
    int findInsertIndex(java.util.ArrayList,int) -> a
    boolean performItemAction$3f412a5c(com.actionbarsherlock.view.MenuItem) -> b
    void close(boolean) -> b
    void close() -> j
    void onItemsChanged(boolean) -> c
    void stopDispatchingItemsChanged() -> k
    void startDispatchingItemsChanged() -> l
    void onItemVisibleChanged$5e2decd5() -> m
    void onItemActionRequestChanged$5e2decd5() -> n
    java.util.ArrayList getVisibleItems() -> o
    void flagActionItems() -> p
    java.util.ArrayList getActionItems() -> q
    java.util.ArrayList getNonActionItems() -> r
    com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> a
    com.actionbarsherlock.internal.view.menu.MenuBuilder getRootMenu() -> s
    boolean getOptionalIconsVisible() -> t
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> b
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getExpandedItem() -> u
    boolean bindNativeOverflow(android.view.Menu,android.view.MenuItem$OnMenuItemClickListener,java.util.HashMap) -> a
com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback -> com.actionbarsherlock.internal.view.menu.k:
    boolean onMenuItemSelected$5f8dddaf(com.actionbarsherlock.view.MenuItem) -> b
    void onMenuModeChange$26b6228d() -> l
com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker -> com.actionbarsherlock.internal.view.menu.l:
    boolean invokeItem(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
com.actionbarsherlock.internal.view.menu.MenuItemImpl -> com.actionbarsherlock.internal.view.menu.m:
    int mId -> a
    int mGroup -> b
    int mCategoryOrder -> c
    int mOrdering -> d
    java.lang.CharSequence mTitle -> e
    java.lang.CharSequence mTitleCondensed -> f
    android.content.Intent mIntent -> g
    char mShortcutNumericChar -> h
    char mShortcutAlphabeticChar -> i
    android.graphics.drawable.Drawable mIconDrawable -> j
    int mIconResId -> k
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> l
    com.actionbarsherlock.internal.view.menu.SubMenuBuilder mSubMenu -> m
    java.lang.Runnable mItemCallback -> n
    com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener mClickListener -> o
    int mFlags -> p
    int mShowAsAction -> q
    android.view.View mActionView -> r
    com.actionbarsherlock.view.ActionProvider mActionProvider -> s
    com.actionbarsherlock.view.MenuItem$OnActionExpandListener mOnActionExpandListener -> t
    boolean mIsActionViewExpanded -> u
    android.view.ContextMenu$ContextMenuInfo mMenuInfo -> v
    java.lang.String sPrependShortcutLabel -> w
    java.lang.String sEnterShortcutLabel -> x
    java.lang.String sDeleteShortcutLabel -> y
    java.lang.String sSpaceShortcutLabel -> z
    boolean invoke() -> k
    boolean isEnabled() -> l
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> c
    int getGroupId() -> a
    int getItemId() -> c
    int getOrder() -> m
    int getOrdering() -> n
    android.content.Intent getIntent() -> o
    char getAlphabeticShortcut() -> p
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> a
    char getNumericShortcut() -> q
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> b
    char getShortcut() -> r
    java.lang.String getShortcutLabel() -> s
    boolean shouldShowShortcut() -> t
    com.actionbarsherlock.view.SubMenu getSubMenu() -> d
    boolean hasSubMenu() -> e
    void setSubMenu(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> a
    java.lang.CharSequence getTitle() -> u
    java.lang.CharSequence getTitleForItemView(com.actionbarsherlock.internal.view.menu.MenuView$ItemView) -> a
    java.lang.CharSequence getTitleCondensed() -> v
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> b
    android.graphics.drawable.Drawable getIcon() -> b
    com.actionbarsherlock.view.MenuItem setIcon(int) -> a
    boolean isCheckable() -> w
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> a
    void setExclusiveCheckable$1385ff() -> x
    boolean isExclusiveCheckable() -> y
    boolean isChecked() -> z
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> b
    void setCheckedInt(boolean) -> e
    boolean isVisible() -> f
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> d
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> a
    java.lang.String toString() -> toString
    void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> a
    boolean shouldShowIcon() -> A
    boolean isActionButton() -> B
    boolean requestsActionButton() -> C
    boolean requiresActionButton() -> D
    void setIsActionButton(boolean) -> f
    boolean showsTextAsAction() -> E
    void setShowAsAction(int) -> b
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> a
    com.actionbarsherlock.view.MenuItem setActionView(int) -> c
    android.view.View getActionView() -> g
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> h
    com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider) -> a
    boolean expandActionView() -> i
    boolean collapseActionView() -> F
    boolean hasCollapsibleActionView() -> G
    void setActionViewExpanded(boolean) -> g
    boolean isActionViewExpanded() -> j
com.actionbarsherlock.internal.view.menu.MenuItemWrapper -> com.actionbarsherlock.internal.view.menu.n:
    android.view.MenuItem mNativeItem -> a
    com.actionbarsherlock.view.SubMenu mSubMenu -> b
    com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener mMenuItemClickListener -> c
    com.actionbarsherlock.view.MenuItem$OnActionExpandListener mActionExpandListener -> d
    android.view.MenuItem$OnActionExpandListener mNativeActionExpandListener -> e
    int getItemId() -> c
    int getGroupId() -> a
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> b
    com.actionbarsherlock.view.MenuItem setIcon(int) -> a
    android.graphics.drawable.Drawable getIcon() -> b
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> b
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> a
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> a
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> b
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> d
    boolean isVisible() -> f
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> c
    boolean hasSubMenu() -> e
    com.actionbarsherlock.view.SubMenu getSubMenu() -> d
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> a
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    void setShowAsAction(int) -> b
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> a
    com.actionbarsherlock.view.MenuItem setActionView(int) -> c
    android.view.View getActionView() -> g
    com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider) -> a
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> h
    boolean expandActionView() -> i
    boolean isActionViewExpanded() -> j
com.actionbarsherlock.internal.view.menu.MenuPopupHelper -> com.actionbarsherlock.internal.view.menu.o:
    int ITEM_LAYOUT -> b
    android.content.Context mContext -> a
    android.view.LayoutInflater mInflater -> d
    com.actionbarsherlock.internal.widget.IcsListPopupWindow mPopup -> e
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> f
    int mPopupMaxWidth -> g
    android.view.View mAnchorView -> h
    boolean mOverflowOnly -> i
    android.view.ViewTreeObserver mTreeObserver -> j
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter mAdapter -> k
    com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback mPresenterCallback -> l
    boolean mForceShowIcon -> c
    android.view.ViewGroup mMeasureParent -> m
    void setAnchorView(android.view.View) -> b
    void show() -> a
    boolean tryShow() -> b
    void dismiss() -> c
    void onDismiss() -> onDismiss
    boolean isShowing() -> d
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    void onGlobalLayout() -> onGlobalLayout
    void onViewDetachedFromWindow(android.view.View) -> a
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    void updateMenuView(boolean) -> b
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> a
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> a
    boolean flagActionItems() -> i
    boolean expandItemActionView$2d5bb53f(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> b
    boolean collapseItemActionView$2d5bb53f(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> c
    boolean access$0(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> a
    android.view.LayoutInflater access$1(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> b
    com.actionbarsherlock.internal.view.menu.MenuBuilder access$2(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> c
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter access$3(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> d
com.actionbarsherlock.internal.view.menu.MenuPopupHelper$ExpandedIndexObserver -> com.actionbarsherlock.internal.view.menu.p:
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper this$0 -> a
    void onChanged() -> onChanged
com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter -> com.actionbarsherlock.internal.view.menu.q:
    com.actionbarsherlock.internal.view.menu.MenuBuilder mAdapterMenu -> b
    int mExpandedIndex -> c
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper this$0 -> a
    int getCount() -> getCount
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void findExpandedIndex() -> a
    java.lang.Object getItem(int) -> getItem
    com.actionbarsherlock.internal.view.menu.MenuBuilder access$1(com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter) -> a
com.actionbarsherlock.internal.view.menu.MenuPresenter -> com.actionbarsherlock.internal.view.menu.r:
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    void updateMenuView(boolean) -> b
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> a
    boolean flagActionItems() -> i
    boolean expandItemActionView$2d5bb53f(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> b
    boolean collapseItemActionView$2d5bb53f(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> c
com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback -> com.actionbarsherlock.internal.view.menu.s:
    void onCloseMenu$4ff11e19(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> b
    boolean onOpenSubMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
com.actionbarsherlock.internal.view.menu.MenuView -> com.actionbarsherlock.internal.view.menu.t:
    void initialize(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
com.actionbarsherlock.internal.view.menu.MenuView$ItemView -> com.actionbarsherlock.internal.view.menu.u:
    void initialize$679020ce(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItemData() -> a
    boolean prefersCondensedTitle() -> b
com.actionbarsherlock.internal.view.menu.MenuWrapper -> com.actionbarsherlock.internal.view.menu.v:
    android.view.Menu mNativeMenu -> a
    java.util.WeakHashMap mNativeMap -> b
    android.view.Menu unwrap() -> a
    com.actionbarsherlock.view.MenuItem addInternal(android.view.MenuItem) -> b
    com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence) -> a
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> b
    void setGroupCheckable$4870cd2e(int) -> a
    boolean hasVisibleItems() -> c
    com.actionbarsherlock.view.MenuItem findItem(int) -> b
    com.actionbarsherlock.view.MenuItem findItem(android.view.MenuItem) -> a
com.actionbarsherlock.internal.view.menu.SubMenuBuilder -> com.actionbarsherlock.internal.view.menu.w:
    com.actionbarsherlock.internal.view.menu.MenuBuilder mParentMenu -> c
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mItem -> d
    void setQwertyMode(boolean) -> a
    boolean isQwertyMode() -> e
    boolean isShortcutsVisible() -> f
    com.actionbarsherlock.view.Menu getParentMenu() -> v
    com.actionbarsherlock.view.MenuItem getItem() -> w
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback) -> a
    com.actionbarsherlock.internal.view.menu.MenuBuilder getRootMenu() -> s
    boolean dispatchMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> a
    com.actionbarsherlock.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> b
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> b
    java.lang.String getActionViewStatesKey() -> a
com.actionbarsherlock.internal.view.menu.SubMenuWrapper -> com.actionbarsherlock.internal.view.menu.x:
    android.view.SubMenu mNativeSubMenu -> a
    com.actionbarsherlock.view.MenuItem mItem -> b
    com.actionbarsherlock.view.MenuItem getItem() -> w
com.actionbarsherlock.internal.widget.AbsActionBarView -> com.actionbarsherlock.internal.widget.AbsActionBarView:
    com.actionbarsherlock.internal.view.menu.ActionMenuView mMenuView -> a
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter mActionMenuPresenter -> b
    com.actionbarsherlock.internal.widget.ActionBarContainer mSplitView -> c
    boolean mSplitActionBar -> d
    boolean mSplitWhenNarrow -> e
    int mContentHeight -> f
    android.content.Context mContext -> g
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mVisibilityAnim -> h
    com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener -> i
    android.view.animation.Interpolator sAlphaInterpolator -> j
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setSplitActionBar(boolean) -> a
    void setSplitWhenNarrow(boolean) -> b
    void setContentHeight(int) -> a
    void setSplitView(com.actionbarsherlock.internal.widget.ActionBarContainer) -> a
    int getAnimatedVisibility() -> b
    void setVisibility(int) -> setVisibility
    boolean showOverflowMenu() -> c
    boolean hideOverflowMenu() -> d
    boolean isOverflowMenuShowing() -> e
    boolean isOverflowReserved() -> f
    void dismissPopupMenus() -> g
    int measureChildView$1bb94239(android.view.View,int,int) -> a
    int positionChild(android.view.View,int,int,int) -> a
    int positionChildInverse(android.view.View,int,int,int) -> b
com.actionbarsherlock.internal.widget.AbsActionBarView$1 -> com.actionbarsherlock.internal.widget.a:
    com.actionbarsherlock.internal.widget.AbsActionBarView this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener -> com.actionbarsherlock.internal.widget.b:
    boolean mCanceled -> c
    int mFinalVisibility -> a
    com.actionbarsherlock.internal.widget.AbsActionBarView this$0 -> b
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> b
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
    void onAnimationCancel$56c33a5() -> a
com.actionbarsherlock.internal.widget.ActionBarContainer -> com.actionbarsherlock.internal.widget.ActionBarContainer:
    boolean mIsTransitioning -> a
    android.view.View mTabContainer -> b
    com.actionbarsherlock.internal.widget.ActionBarView mActionBarView -> c
    android.graphics.drawable.Drawable mBackground -> d
    android.graphics.drawable.Drawable mStackedBackground -> e
    android.graphics.drawable.Drawable mSplitBackground -> f
    boolean mIsSplit -> g
    boolean mIsStacked -> h
    void onFinishInflate() -> onFinishInflate
    void setPrimaryBackground(android.graphics.drawable.Drawable) -> a
    void setSplitBackground(android.graphics.drawable.Drawable) -> b
    void setTransitioning(boolean) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    void setTabContainer(com.actionbarsherlock.internal.widget.ScrollingTabContainerView) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
com.actionbarsherlock.internal.widget.ActionBarContextView -> com.actionbarsherlock.internal.widget.ActionBarContextView:
    java.lang.CharSequence mTitle -> j
    com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout mClose -> k
    android.view.View mCustomView -> l
    android.widget.LinearLayout mTitleLayout -> m
    int mTitleStyleRes -> n
    int mSubtitleStyleRes -> o
    android.graphics.drawable.Drawable mSplitBackground -> p
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mCurrentAnimation -> q
    boolean mAnimateInOnLayout -> r
    int mAnimationMode -> s
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setSplitActionBar(boolean) -> a
    void setContentHeight(int) -> a
    boolean showOverflowMenu() -> c
    boolean hideOverflowMenu() -> d
    boolean isOverflowMenuShowing() -> e
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> b
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
    void onAnimationCancel$56c33a5() -> a
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
com.actionbarsherlock.internal.widget.ActionBarView -> com.actionbarsherlock.internal.widget.ActionBarView:
    int mNavigationMode -> l
    int mDisplayOptions -> m
    java.lang.CharSequence mTitle -> n
    java.lang.CharSequence mSubtitle -> o
    android.graphics.drawable.Drawable mIcon -> p
    android.graphics.drawable.Drawable mLogo -> q
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView mHomeLayout -> r
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView mExpandedHomeLayout -> s
    android.widget.LinearLayout mTitleLayout -> t
    android.widget.TextView mTitleView -> u
    android.widget.TextView mSubtitleView -> v
    android.view.View mTitleUpView -> w
    com.actionbarsherlock.internal.widget.IcsSpinner mSpinner -> x
    com.actionbarsherlock.internal.widget.IcsLinearLayout mListNavLayout -> y
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView mTabScrollView -> z
    android.view.View mCustomNavView -> A
    com.actionbarsherlock.internal.widget.IcsProgressBar mProgressView -> B
    com.actionbarsherlock.internal.widget.IcsProgressBar mIndeterminateProgressView -> C
    int mProgressBarPadding -> D
    int mItemPadding -> E
    int mTitleStyleRes -> F
    int mSubtitleStyleRes -> G
    int mProgressStyle -> H
    int mIndeterminateProgressStyle -> I
    boolean mUserTitle -> J
    boolean mIncludeTabs -> K
    boolean mIsCollapsable -> L
    boolean mIsCollapsed -> M
    com.actionbarsherlock.internal.view.menu.MenuBuilder mOptionsMenu -> N
    com.actionbarsherlock.internal.widget.ActionBarContextView mContextView -> O
    com.actionbarsherlock.internal.view.menu.ActionMenuItem mLogoNavItem -> P
    com.actionbarsherlock.app.ActionBar$OnNavigationListener mCallback -> Q
    com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter mExpandedMenuPresenter -> R
    android.view.View mExpandedActionView -> j
    com.actionbarsherlock.view.Window$Callback mWindowCallback -> k
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener mNavItemSelectedListener -> S
    android.view.View$OnClickListener mExpandedActionViewUpListener -> T
    android.view.View$OnClickListener mUpClickListener -> U
    int loadLogoFromManifest(android.app.Activity) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setWindowCallback(com.actionbarsherlock.view.Window$Callback) -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    void initProgress() -> a
    void initIndeterminateProgress() -> h
    void setSplitActionBar(boolean) -> a
    boolean isSplitActionBar() -> i
    void setEmbeddedTabView(com.actionbarsherlock.internal.widget.ScrollingTabContainerView) -> a
    void setMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> a
    void configPresenters(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    boolean hasExpandedActionView() -> j
    void collapseActionView() -> k
    void setCustomNavigationView(android.view.View) -> a
    java.lang.CharSequence getTitle() -> l
    void setWindowTitle(java.lang.CharSequence) -> a
    void setHomeButtonEnabled(boolean) -> c
    void setDisplayOptions(int) -> b
    int getNavigationMode() -> m
    int getDisplayOptions() -> n
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void onFinishInflate() -> onFinishInflate
    void initTitle() -> p
    void setContextView(com.actionbarsherlock.internal.widget.ActionBarContextView) -> a
    void setCollapsable(boolean) -> d
    boolean isCollapsed() -> o
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    com.actionbarsherlock.app.ActionBar$OnNavigationListener access$0(com.actionbarsherlock.internal.widget.ActionBarView) -> a
    com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter access$1(com.actionbarsherlock.internal.widget.ActionBarView) -> b
    com.actionbarsherlock.internal.view.menu.ActionMenuItem access$2(com.actionbarsherlock.internal.widget.ActionBarView) -> c
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView access$3(com.actionbarsherlock.internal.widget.ActionBarView) -> d
    android.graphics.drawable.Drawable access$4(com.actionbarsherlock.internal.widget.ActionBarView) -> e
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView access$5(com.actionbarsherlock.internal.widget.ActionBarView) -> f
    android.widget.LinearLayout access$6(com.actionbarsherlock.internal.widget.ActionBarView) -> g
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView access$7(com.actionbarsherlock.internal.widget.ActionBarView) -> h
    com.actionbarsherlock.internal.widget.IcsSpinner access$8(com.actionbarsherlock.internal.widget.ActionBarView) -> i
    android.view.View access$9(com.actionbarsherlock.internal.widget.ActionBarView) -> j
    int access$10(com.actionbarsherlock.internal.widget.ActionBarView) -> k
    void access$11(com.actionbarsherlock.internal.widget.ActionBarView) -> l
    int access$12(com.actionbarsherlock.internal.widget.ActionBarView) -> m
com.actionbarsherlock.internal.widget.ActionBarView$1 -> com.actionbarsherlock.internal.widget.c:
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> a
    void onItemSelected$4cda22f6$17e13fe2(android.view.View) -> a
com.actionbarsherlock.internal.widget.ActionBarView$2 -> com.actionbarsherlock.internal.widget.d:
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> a
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.internal.widget.ActionBarView$3 -> com.actionbarsherlock.internal.widget.e:
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> a
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter -> com.actionbarsherlock.internal.widget.f:
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> a
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mCurrentExpandedItem -> b
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> c
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    void updateMenuView(boolean) -> b
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> a
    boolean flagActionItems() -> i
    boolean expandItemActionView$2d5bb53f(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> b
    boolean collapseItemActionView$2d5bb53f(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> c
com.actionbarsherlock.internal.widget.ActionBarView$HomeView -> com.actionbarsherlock.internal.widget.ActionBarView$HomeView:
    android.view.View mUpView -> a
    android.widget.ImageView mIconView -> b
    int mUpWidth -> c
    void setUp(boolean) -> a
    void setIcon(android.graphics.drawable.Drawable) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    void onFinishInflate() -> onFinishInflate
    int getLeftOffset() -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
com.actionbarsherlock.internal.widget.ActionBarView$SavedState -> com.actionbarsherlock.internal.widget.ActionBarView$SavedState:
    int expandedMenuItemId -> a
    boolean isOverflowOpen -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.actionbarsherlock.internal.widget.ActionBarView$SavedState$1 -> com.actionbarsherlock.internal.widget.g:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.actionbarsherlock.internal.widget.CapitalizingButton -> com.actionbarsherlock.internal.widget.CapitalizingButton:
    boolean SANS_ICE_CREAM -> a
    boolean IS_GINGERBREAD -> b
    int[] R_styleable_Button -> c
    boolean mAllCaps -> d
    void setTextCompat(java.lang.CharSequence) -> a
com.actionbarsherlock.internal.widget.CapitalizingTextView -> com.actionbarsherlock.internal.widget.CapitalizingTextView:
    boolean SANS_ICE_CREAM -> a
    boolean IS_GINGERBREAD -> b
    int[] R_styleable_TextView -> c
    boolean mAllCaps -> d
    void setTextCompat(java.lang.CharSequence) -> a
com.actionbarsherlock.internal.widget.FakeDialogPhoneWindow -> com.actionbarsherlock.internal.widget.FakeDialogPhoneWindow:
    android.util.TypedValue mMinWidthMajor -> a
    android.util.TypedValue mMinWidthMinor -> b
    void onMeasure(int,int) -> onMeasure
com.actionbarsherlock.internal.widget.IcsAbsSpinner -> com.actionbarsherlock.internal.widget.IcsAbsSpinner:
    boolean IS_HONEYCOMB -> D
    android.widget.SpinnerAdapter mAdapter -> a
    int mHeightMeasureSpec -> b
    int mWidthMeasureSpec -> c
    boolean mBlockLayoutRequests -> d
    int mSelectionLeftPadding -> e
    int mSelectionTopPadding -> f
    int mSelectionRightPadding -> g
    int mSelectionBottomPadding -> h
    android.graphics.Rect mSpinnerPadding -> i
    com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin mRecycler -> j
    android.database.DataSetObserver mDataSetObserver -> E
    void setAdapter(android.widget.SpinnerAdapter) -> a
    void resetList() -> a
    void onMeasure(int,int) -> onMeasure
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void setSelection(int) -> a
    android.view.View getSelectedView() -> b
    void requestLayout() -> requestLayout
    android.widget.SpinnerAdapter getAdapter() -> c
    int getCount() -> d
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.widget.Adapter getAdapter() -> e
    void access$2$4fa1295a(com.actionbarsherlock.internal.widget.IcsAbsSpinner,android.view.View) -> a
com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin -> com.actionbarsherlock.internal.widget.h:
    android.util.SparseArray mScrapHeap -> b
    com.actionbarsherlock.internal.widget.IcsAbsSpinner this$0 -> a
    void put(int,android.view.View) -> a
    android.view.View get(int) -> a
    void clear() -> a
com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState -> com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState:
    long selectedId -> a
    int position -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState$1 -> com.actionbarsherlock.internal.widget.i:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.actionbarsherlock.internal.widget.IcsAdapterView -> com.actionbarsherlock.internal.widget.IcsAdapterView:
    int mFirstPosition -> k
    int mSpecificTop -> l
    int mSyncPosition -> m
    long mSyncRowId -> n
    long mSyncHeight -> o
    boolean mNeedSync -> p
    int mSyncMode -> q
    int mLayoutHeight -> a
    boolean mInLayout -> r
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener mOnItemSelectedListener -> s
    boolean mDataChanged -> t
    int mNextSelectedPosition -> u
    long mNextSelectedRowId -> v
    int mSelectedPosition -> w
    long mSelectedRowId -> x
    android.view.View mEmptyView -> b
    int mItemCount -> y
    int mOldItemCount -> z
    int mOldSelectedPosition -> A
    long mOldSelectedRowId -> B
    boolean mDesiredFocusableState -> c
    boolean mDesiredFocusableInTouchModeState -> d
    com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier mSelectionNotifier -> e
    boolean mBlockLayoutRequests -> C
    void setOnItemSelectedListener(com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener) -> a
    android.widget.Adapter getAdapter() -> e
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    void removeViewAt(int) -> removeViewAt
    void removeAllViews() -> removeAllViews
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getSelectedItemPosition() -> f
    android.view.View getSelectedView() -> b
    int getCount() -> d
    int getLastVisiblePosition() -> a
    void setFocusable(boolean) -> setFocusable
    void setFocusableInTouchMode(boolean) -> setFocusableInTouchMode
    void checkFocus() -> g
    long getItemIdAtPosition(int) -> a
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    void onDetachedFromWindow() -> onDetachedFromWindow
    void fireOnSelected() -> c
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean isScrollableForAccessibility() -> k
    boolean canAnimate() -> canAnimate
    void handleDataChanged() -> h
    void checkSelectionChanged() -> i
    void setSelectedPositionInt(int) -> b
    void setNextSelectedPositionInt(int) -> c
    void rememberSyncState() -> j
    void access$0(com.actionbarsherlock.internal.widget.IcsAdapterView,android.os.Parcelable) -> a
    android.os.Parcelable access$1(com.actionbarsherlock.internal.widget.IcsAdapterView) -> a
    void access$2(com.actionbarsherlock.internal.widget.IcsAdapterView) -> b
com.actionbarsherlock.internal.widget.IcsAdapterView$AdapterDataSetObserver -> com.actionbarsherlock.internal.widget.j:
    android.os.Parcelable mInstanceState -> b
    com.actionbarsherlock.internal.widget.IcsAdapterView this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener -> com.actionbarsherlock.internal.widget.k:
    void onItemSelected$4cda22f6$17e13fe2(android.view.View) -> a
com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier -> com.actionbarsherlock.internal.widget.l:
    com.actionbarsherlock.internal.widget.IcsAdapterView this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.widget.IcsLinearLayout -> com.actionbarsherlock.internal.widget.IcsLinearLayout:
    int[] LinearLayout -> a
    android.graphics.drawable.Drawable mDivider -> b
    int mDividerWidth -> c
    int mDividerHeight -> d
    int mShowDividers -> e
    int mDividerPadding -> f
    void setShowDividers(int) -> setShowDividers
    int getShowDividers() -> getShowDividers
    void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    void setDividerPadding(int) -> setDividerPadding
    int getDividerPadding() -> getDividerPadding
    void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawHorizontalDivider(android.graphics.Canvas,int) -> a
    void drawVerticalDivider(android.graphics.Canvas,int) -> b
    boolean hasDividerBeforeChildAt(int) -> a
com.actionbarsherlock.internal.widget.IcsListPopupWindow -> com.actionbarsherlock.internal.widget.IcsListPopupWindow:
    android.content.Context mContext -> a
    android.widget.PopupWindow mPopup -> b
    android.widget.ListAdapter mAdapter -> c
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView mDropDownList -> d
    int mDropDownHeight -> e
    int mDropDownWidth -> f
    int mDropDownHorizontalOffset -> g
    int mDropDownVerticalOffset -> h
    boolean mDropDownVerticalOffsetSet -> i
    int mListItemExpandMaximum -> j
    android.view.View mPromptView -> k
    int mPromptPosition -> l
    android.database.DataSetObserver mObserver -> m
    android.view.View mDropDownAnchorView -> n
    android.graphics.drawable.Drawable mDropDownListHighlight -> o
    android.widget.AdapterView$OnItemClickListener mItemClickListener -> p
    android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener -> q
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable mResizePopupRunnable -> r
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor mTouchInterceptor -> s
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener mScrollListener -> t
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider mHideSelector -> u
    android.os.Handler mHandler -> v
    android.graphics.Rect mTempRect -> w
    boolean mModal -> x
    void setAdapter(android.widget.ListAdapter) -> a
    void setPromptPosition$13462e() -> a
    void setModal$1385ff() -> b
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> a
    void setAnchorView(android.view.View) -> a
    void setHorizontalOffset(int) -> a
    void setVerticalOffset(int) -> b
    void setContentWidth(int) -> c
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> a
    void show() -> c
    void dismiss() -> d
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> a
    void setInputMethodMode$13462e() -> e
    void clearListSelection() -> f
    boolean isShowing() -> g
    boolean isInputMethodNotNeeded() -> i
    android.widget.ListView getListView() -> h
    int measureHeightOfChildren$2e71581f(int) -> d
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView access$0(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> a
    int access$1(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> b
    android.widget.PopupWindow access$2(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> c
    android.os.Handler access$3(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> d
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable access$4(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> e
    boolean access$5(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> f
com.actionbarsherlock.internal.widget.IcsListPopupWindow$1 -> com.actionbarsherlock.internal.widget.m:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView -> com.actionbarsherlock.internal.widget.n:
    boolean mListSelectionHidden -> a
    boolean mHijackFocus -> b
    boolean isInTouchMode() -> isInTouchMode
    boolean hasWindowFocus() -> hasWindowFocus
    boolean isFocused() -> isFocused
    boolean hasFocus() -> hasFocus
    void access$0(com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView,boolean) -> a
com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider -> com.actionbarsherlock.internal.widget.o:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupDataSetObserver -> com.actionbarsherlock.internal.widget.p:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener -> com.actionbarsherlock.internal.widget.q:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> a
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor -> com.actionbarsherlock.internal.widget.r:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable -> com.actionbarsherlock.internal.widget.s:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.widget.IcsProgressBar -> com.actionbarsherlock.internal.widget.IcsProgressBar:
    boolean IS_HONEYCOMB -> f
    int[] ProgressBar -> g
    int mMinWidth -> a
    int mMaxWidth -> b
    int mMinHeight -> c
    int mMaxHeight -> d
    int mProgress -> h
    int mSecondaryProgress -> i
    int mMax -> j
    int mBehavior -> k
    int mDuration -> l
    boolean mIndeterminate -> m
    boolean mOnlyIndeterminate -> n
    android.view.animation.Transformation mTransformation -> o
    android.view.animation.AlphaAnimation mAnimation -> p
    android.graphics.drawable.Drawable mIndeterminateDrawable -> q
    int mIndeterminateRealLeft -> r
    int mIndeterminateRealTop -> s
    android.graphics.drawable.Drawable mProgressDrawable -> t
    android.graphics.drawable.Drawable mCurrentDrawable -> u
    android.graphics.Bitmap mSampleTile -> e
    boolean mNoInvalidate -> v
    android.view.animation.Interpolator mInterpolator -> w
    com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable mRefreshProgressRunnable -> x
    long mUiThreadId -> y
    boolean mShouldStartAnimationDrawable -> z
    long mLastDrawTime -> A
    boolean mInDrawing -> B
    int mAnimationResolution -> C
    android.view.accessibility.AccessibilityManager mAccessibilityManager -> D
    com.actionbarsherlock.internal.widget.IcsProgressBar$AccessibilityEventSender mAccessibilityEventSender -> E
    android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean) -> a
    android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable) -> a
    void setIndeterminate(boolean) -> a
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    void postInvalidate() -> postInvalidate
    void doRefreshProgress$3b46042b(int,int,boolean) -> a
    void refreshProgress$486912df(int,int) -> a
    void setProgress(int) -> b
    void setProgress$2563266(int) -> c
    void setSecondaryProgress(int) -> d
    void setMax(int) -> a
    void startAnimation() -> a
    void stopAnimation() -> b
    void setVisibility(int) -> setVisibility
    void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void updateDrawableBounds(int,int) -> b
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void drawableStateChanged() -> drawableStateChanged
    void updateDrawableState() -> c
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void access$0$658471ab$5fd275b7(com.actionbarsherlock.internal.widget.IcsProgressBar,int,int) -> a
    void access$1(com.actionbarsherlock.internal.widget.IcsProgressBar,com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable) -> a
com.actionbarsherlock.internal.widget.IcsProgressBar$AccessibilityEventSender -> com.actionbarsherlock.internal.widget.t:
    com.actionbarsherlock.internal.widget.IcsProgressBar this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable -> com.actionbarsherlock.internal.widget.u:
    int mId -> b
    int mProgress -> c
    boolean mFromUser -> d
    com.actionbarsherlock.internal.widget.IcsProgressBar this$0 -> a
    void run() -> run
    void setup$486912df(int,int) -> a
com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState -> com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState:
    int progress -> a
    int secondaryProgress -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState$1 -> com.actionbarsherlock.internal.widget.v:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.actionbarsherlock.internal.widget.IcsSpinner -> com.actionbarsherlock.internal.widget.IcsSpinner:
    com.actionbarsherlock.internal.widget.IcsSpinner$SpinnerPopup mPopup -> E
    com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter mTempAdapter -> F
    int mDropDownWidth -> D
    int mGravity -> G
    boolean mDisableChildrenWhenDisabled -> H
    android.graphics.Rect mTempRect -> I
    void setEnabled(boolean) -> setEnabled
    void setAdapter(android.widget.SpinnerAdapter) -> a
    int getBaseline() -> getBaseline
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.view.View makeAndAddView(int) -> d
    void setUpChild(android.view.View) -> a
    boolean performClick() -> performClick
    void onClick(android.content.DialogInterface,int) -> onClick
    int measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> a
    android.graphics.Rect access$0(com.actionbarsherlock.internal.widget.IcsSpinner) -> a
com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter -> com.actionbarsherlock.internal.widget.w:
    android.widget.SpinnerAdapter mAdapter -> a
    android.widget.ListAdapter mListAdapter -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    boolean hasStableIds() -> hasStableIds
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    boolean isEmpty() -> isEmpty
com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup -> com.actionbarsherlock.internal.widget.x:
    java.lang.CharSequence mHintText -> b
    android.widget.ListAdapter mAdapter -> c
    com.actionbarsherlock.internal.widget.IcsSpinner this$0 -> a
    void setAdapter(android.widget.ListAdapter) -> a
    void setPromptText(java.lang.CharSequence) -> a
    void show() -> c
    com.actionbarsherlock.internal.widget.IcsSpinner access$0(com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup) -> a
com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup$1 -> com.actionbarsherlock.internal.widget.y:
    com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup this$1 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.actionbarsherlock.internal.widget.IcsSpinner$SpinnerPopup -> com.actionbarsherlock.internal.widget.z:
    void setAdapter(android.widget.ListAdapter) -> a
    void show() -> c
    void dismiss() -> d
    boolean isShowing() -> g
    void setPromptText(java.lang.CharSequence) -> a
com.actionbarsherlock.internal.widget.ScrollingTabContainerView -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView:
    java.lang.Runnable mTabSelector -> a
    com.actionbarsherlock.internal.widget.IcsLinearLayout mTabLayout -> c
    com.actionbarsherlock.internal.widget.IcsSpinner mTabSpinner -> d
    boolean mAllowCollapse -> e
    android.view.LayoutInflater mInflater -> f
    int mMaxTabWidth -> b
    int mContentHeight -> g
    int mSelectedTabIndex -> h
    android.view.animation.Interpolator sAlphaInterpolator -> i
    void onMeasure(int,int) -> onMeasure
    boolean isCollapsed() -> a
    void setAllowCollapse(boolean) -> a
    boolean performExpand() -> b
    void setTabSelected(int) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onItemSelected$4cda22f6$17e13fe2(android.view.View) -> a
    com.actionbarsherlock.internal.widget.IcsLinearLayout access$0(com.actionbarsherlock.internal.widget.ScrollingTabContainerView) -> a
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView access$1$6b53874d(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,com.actionbarsherlock.app.ActionBar$Tab) -> a
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$1 -> com.actionbarsherlock.internal.widget.aa:
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView this$0 -> a
    android.view.View val$tabView -> b
    void run() -> run
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabAdapter -> com.actionbarsherlock.internal.widget.ab:
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView:
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView mParent -> a
    com.actionbarsherlock.app.ActionBar$Tab mTab -> b
    com.actionbarsherlock.internal.widget.CapitalizingTextView mTextView -> c
    android.widget.ImageView mIconView -> d
    android.view.View mCustomView -> e
    void init$60413572(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,com.actionbarsherlock.app.ActionBar$Tab) -> a
    void bindTab(com.actionbarsherlock.app.ActionBar$Tab) -> a
    void onMeasure(int,int) -> onMeasure
    void update() -> b
    com.actionbarsherlock.app.ActionBar$Tab getTab() -> a
com.actionbarsherlock.view.ActionMode -> com.actionbarsherlock.a.a:
com.actionbarsherlock.view.ActionMode$Callback -> com.actionbarsherlock.a.b:
com.actionbarsherlock.view.ActionProvider -> com.actionbarsherlock.a.c:
    com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> a
    android.view.View onCreateActionView() -> a
    void subUiVisibilityChanged(boolean) -> a
    void setSubUiVisibilityListener(com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener) -> a
com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener -> com.actionbarsherlock.a.d:
    void onSubUiVisibilityChanged(boolean) -> c
com.actionbarsherlock.view.CollapsibleActionView -> com.actionbarsherlock.a.e:
com.actionbarsherlock.view.Menu -> com.actionbarsherlock.a.f:
    com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence) -> a
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> b
    void setGroupCheckable$4870cd2e(int) -> a
    boolean hasVisibleItems() -> c
    com.actionbarsherlock.view.MenuItem findItem(int) -> b
com.actionbarsherlock.view.MenuInflater -> com.actionbarsherlock.a.g:
    java.lang.Class[] ACTION_VIEW_CONSTRUCTOR_SIGNATURE -> a
    java.lang.Class[] ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE -> b
    java.lang.Object[] mActionViewConstructorArguments -> c
    java.lang.Object[] mActionProviderConstructorArguments -> d
    android.content.Context mContext -> e
    void inflate$753e82c3(com.actionbarsherlock.view.Menu) -> a
    void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,com.actionbarsherlock.view.Menu) -> a
    android.content.Context access$0(com.actionbarsherlock.view.MenuInflater) -> a
    java.lang.Class[] access$1() -> a
    java.lang.Object[] access$2(com.actionbarsherlock.view.MenuInflater) -> b
    java.lang.Class[] access$3() -> b
    java.lang.Object[] access$4(com.actionbarsherlock.view.MenuInflater) -> c
com.actionbarsherlock.view.MenuInflater$InflatedOnMenuItemClickListener -> com.actionbarsherlock.a.h:
    java.lang.Class[] PARAM_TYPES -> a
    android.content.Context mContext -> b
    java.lang.reflect.Method mMethod -> c
    boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem) -> a
com.actionbarsherlock.view.MenuInflater$MenuState -> com.actionbarsherlock.a.i:
    com.actionbarsherlock.view.Menu menu -> b
    int groupId -> c
    int groupCategory -> d
    int groupOrder -> e
    int groupCheckable -> f
    boolean groupVisible -> g
    boolean groupEnabled -> h
    boolean itemAdded -> i
    int itemId -> j
    int itemCategoryOrder -> k
    java.lang.CharSequence itemTitle -> l
    java.lang.CharSequence itemTitleCondensed -> m
    int itemIconResId -> n
    char itemAlphabeticShortcut -> o
    char itemNumericShortcut -> p
    int itemCheckable -> q
    boolean itemChecked -> r
    boolean itemVisible -> s
    boolean itemEnabled -> t
    int itemShowAsAction -> u
    int itemActionViewLayout -> v
    java.lang.String itemActionViewClassName -> w
    java.lang.String itemActionProviderClassName -> x
    java.lang.String itemListenerMethodName -> y
    com.actionbarsherlock.view.ActionProvider itemActionProvider -> z
    com.actionbarsherlock.view.MenuInflater this$0 -> a
    void resetGroup() -> a
    void readGroup(android.util.AttributeSet) -> a
    void readItem(android.util.AttributeSet) -> b
    char getShortcut(java.lang.String) -> a
    void setItem(com.actionbarsherlock.view.MenuItem) -> a
    void addItem() -> b
    com.actionbarsherlock.view.SubMenu addSubMenuItem() -> c
    boolean hasAddedItem() -> d
    java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> a
    com.actionbarsherlock.view.ActionProvider access$0(com.actionbarsherlock.view.MenuInflater$MenuState) -> a
com.actionbarsherlock.view.MenuItem -> com.actionbarsherlock.a.j:
    int getItemId() -> c
    int getGroupId() -> a
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> b
    com.actionbarsherlock.view.MenuItem setIcon(int) -> a
    android.graphics.drawable.Drawable getIcon() -> b
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> b
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> a
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> a
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> b
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> d
    boolean isVisible() -> f
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> c
    boolean hasSubMenu() -> e
    com.actionbarsherlock.view.SubMenu getSubMenu() -> d
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> a
    void setShowAsAction(int) -> b
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> a
    com.actionbarsherlock.view.MenuItem setActionView(int) -> c
    android.view.View getActionView() -> g
    com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider) -> a
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> h
    boolean expandActionView() -> i
    boolean isActionViewExpanded() -> j
com.actionbarsherlock.view.MenuItem$OnActionExpandListener -> com.actionbarsherlock.a.k:
    boolean onMenuItemActionExpand$58cc55c7() -> a
    boolean onMenuItemActionCollapse$58cc55c7() -> b
com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener -> com.actionbarsherlock.a.l:
    boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem) -> a
com.actionbarsherlock.view.SubMenu -> com.actionbarsherlock.a.m:
    com.actionbarsherlock.view.MenuItem getItem() -> w
com.actionbarsherlock.view.Window -> com.actionbarsherlock.a.n:
com.actionbarsherlock.view.Window$Callback -> com.actionbarsherlock.a.o:
    boolean onMenuItemSelected$7350e552(com.actionbarsherlock.view.MenuItem) -> c
com.actionbarsherlock.widget.ActivityChooserModel -> com.actionbarsherlock.widget.a:
    java.lang.String LOG_TAG -> a
    java.lang.Object sRegistryLock -> b
    java.util.Map sDataModelRegistry -> c
    java.lang.Object mInstanceLock -> d
    java.util.List mActivites -> e
    java.util.List mHistoricalRecords -> f
    android.content.Context mContext -> g
    java.lang.String mHistoryFileName -> h
    android.content.Intent mIntent -> i
    com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter mActivitySorter -> j
    int mHistoryMaxSize -> k
    boolean mCanReadHistoricalData -> l
    boolean mReadShareHistoryCalled -> m
    boolean mHistoricalRecordsChanged -> n
    com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener mActivityChoserModelPolicy -> o
    com.actionbarsherlock.widget.ActivityChooserModel$SerialExecutor SERIAL_EXECUTOR -> p
    int getActivityCount() -> a
    android.content.pm.ResolveInfo getActivity(int) -> a
    int getActivityIndex(android.content.pm.ResolveInfo) -> a
    android.content.Intent chooseActivity(int) -> b
    android.content.pm.ResolveInfo getDefaultActivity() -> b
    void setDefaultActivity(int) -> c
    int getHistorySize() -> c
    boolean addHisoricalRecord(com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord) -> a
    android.content.Context access$0(com.actionbarsherlock.widget.ActivityChooserModel) -> a
    java.lang.String access$1(com.actionbarsherlock.widget.ActivityChooserModel) -> b
    java.lang.Object access$2(com.actionbarsherlock.widget.ActivityChooserModel) -> c
    java.util.List access$3(com.actionbarsherlock.widget.ActivityChooserModel) -> d
    java.lang.String access$8() -> d
com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo -> com.actionbarsherlock.widget.b:
    android.content.pm.ResolveInfo resolveInfo -> a
    float weight -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter -> com.actionbarsherlock.widget.c:
com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord -> com.actionbarsherlock.widget.d:
    android.content.ComponentName activity -> a
    long time -> b
    float weight -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.actionbarsherlock.widget.ActivityChooserModel$HistoryPersister -> com.actionbarsherlock.widget.e:
    com.actionbarsherlock.widget.ActivityChooserModel this$0 -> a
    void run() -> run
com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener -> com.actionbarsherlock.widget.f:
    boolean onChooseActivity$762b7b8() -> a
com.actionbarsherlock.widget.ActivityChooserModel$SerialExecutor -> com.actionbarsherlock.widget.g:
    java.util.LinkedList mTasks -> a
    java.lang.Runnable mActive -> b
    void execute(java.lang.Runnable) -> execute
    void scheduleNext() -> a
com.actionbarsherlock.widget.ActivityChooserModel$SerialExecutor$1 -> com.actionbarsherlock.widget.h:
    com.actionbarsherlock.widget.ActivityChooserModel$SerialExecutor this$1 -> a
    java.lang.Runnable val$r -> b
    void run() -> run
com.actionbarsherlock.widget.ActivityChooserView -> com.actionbarsherlock.widget.ActivityChooserView:
    com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter mAdapter -> b
    com.actionbarsherlock.widget.ActivityChooserView$Callbacks mCallbacks -> c
    com.actionbarsherlock.internal.widget.IcsLinearLayout mActivityChooserContent -> d
    android.graphics.drawable.Drawable mActivityChooserContentBackground -> e
    android.widget.FrameLayout mExpandActivityOverflowButton -> f
    android.widget.ImageView mExpandActivityOverflowButtonImage -> g
    android.widget.FrameLayout mDefaultActivityButton -> h
    android.widget.ImageView mDefaultActivityButtonImage -> i
    int mListPopupMaxWidth -> j
    com.actionbarsherlock.view.ActionProvider mProvider -> a
    android.database.DataSetObserver mModelDataSetOberver -> k
    android.view.ViewTreeObserver$OnGlobalLayoutListener mOnGlobalLayoutListener -> l
    com.actionbarsherlock.internal.widget.IcsListPopupWindow mListPopupWindow -> m
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> n
    boolean mIsSelectingDefaultActivity -> o
    int mInitialActivityCount -> p
    boolean mIsAttachedToWindow -> q
    int mDefaultActionButtonContentDescription -> r
    android.content.Context mContext -> s
    boolean IS_HONEYCOMB -> t
    void showPopupUnchecked(int) -> a
    boolean dismissPopup() -> a
    boolean isShowingPopup() -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    com.actionbarsherlock.internal.widget.IcsListPopupWindow getListPopupWindow() -> d
    com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter access$0(com.actionbarsherlock.widget.ActivityChooserView) -> a
    com.actionbarsherlock.internal.widget.IcsListPopupWindow access$1(com.actionbarsherlock.widget.ActivityChooserView) -> b
    void access$2(com.actionbarsherlock.widget.ActivityChooserView,int) -> a
    boolean access$3(com.actionbarsherlock.widget.ActivityChooserView) -> c
    android.content.Context access$4(com.actionbarsherlock.widget.ActivityChooserView) -> d
    android.widget.FrameLayout access$5(com.actionbarsherlock.widget.ActivityChooserView) -> e
    android.widget.FrameLayout access$6(com.actionbarsherlock.widget.ActivityChooserView) -> f
    void access$7(com.actionbarsherlock.widget.ActivityChooserView,boolean) -> a
    int access$8(com.actionbarsherlock.widget.ActivityChooserView) -> g
    android.widget.PopupWindow$OnDismissListener access$9(com.actionbarsherlock.widget.ActivityChooserView) -> h
    boolean access$11() -> c
    void access$12(com.actionbarsherlock.widget.ActivityChooserView) -> i
com.actionbarsherlock.widget.ActivityChooserView$1 -> com.actionbarsherlock.widget.i:
    com.actionbarsherlock.widget.ActivityChooserView this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.actionbarsherlock.widget.ActivityChooserView$2 -> com.actionbarsherlock.widget.j:
    com.actionbarsherlock.widget.ActivityChooserView this$0 -> a
    void onGlobalLayout() -> onGlobalLayout
com.actionbarsherlock.widget.ActivityChooserView$3 -> com.actionbarsherlock.widget.k:
    com.actionbarsherlock.widget.ActivityChooserView this$0 -> a
    void onChanged() -> onChanged
com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter -> com.actionbarsherlock.widget.l:
    com.actionbarsherlock.widget.ActivityChooserModel mDataModel -> b
    int mMaxActivityCount -> c
    boolean mShowDefaultActivity -> d
    boolean mHighlightDefaultActivity -> e
    boolean mShowFooterView -> f
    com.actionbarsherlock.widget.ActivityChooserView this$0 -> a
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int measureContentWidth() -> a
    void setMaxActivityCount(int) -> a
    android.content.pm.ResolveInfo getDefaultActivity() -> b
    void setShowFooterView(boolean) -> a
    int getActivityCount() -> c
    int getHistorySize() -> d
    int getMaxActivityCount() -> e
    com.actionbarsherlock.widget.ActivityChooserModel getDataModel() -> f
    void setShowDefaultActivity(boolean,boolean) -> a
    boolean getShowDefaultActivity() -> g
com.actionbarsherlock.widget.ActivityChooserView$Callbacks -> com.actionbarsherlock.widget.m:
    com.actionbarsherlock.widget.ActivityChooserView this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onClick(android.view.View) -> onClick
    boolean onLongClick(android.view.View) -> onLongClick
    void onDismiss() -> onDismiss
org.catrobat.paintroid.pocketpaint.FileIO -> org.catrobat.paintroid.pocketpaint.a:
    java.io.File PAINTROID_MEDIA_FILE -> a
    java.io.File saveBitmap(android.content.Context,android.graphics.Bitmap,java.lang.String) -> a
    java.io.File createNewEmptyPictureFile$2b27f8d0(java.lang.String) -> a
    java.lang.String getRealPathFromURI(android.content.Context,android.net.Uri) -> a
    boolean initialisePaintroidMediaDirectory() -> a
    android.graphics.Bitmap getBitmapFromFile(java.io.File) -> a
    java.lang.String createFilePathFromUri(android.app.Activity,android.net.Uri) -> a
    void copyStream(java.io.InputStream,java.io.OutputStream) -> a
org.catrobat.paintroid.pocketpaint.MainActivity -> org.catrobat.paintroid.pocketpaint.MainActivity:
    org.catrobat.paintroid.pocketpaint.listener.DrawingSurfaceListener mDrawingSurfaceListener -> m
    org.catrobat.paintroid.pocketpaint.ui.Statusbar mStatusbar -> n
    boolean mToolbarIsVisible -> o
    com.actionbarsherlock.view.Menu mMenu -> q
    int[] $SWITCH_TABLE$org$catrobat$paintroid$pocketpaint$tools$ToolType -> r
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> c
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> b
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> d
    void onBackPressed() -> onBackPressed
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void switchTool(org.catrobat.paintroid.pocketpaint.tools.ToolType) -> a
    void switchTool(org.catrobat.paintroid.pocketpaint.tools.Tool) -> a
    void showSecurityQuestionBeforeExit() -> h
    void setFullScreen(boolean) -> b
    int[] $SWITCH_TABLE$org$catrobat$paintroid$pocketpaint$tools$ToolType() -> i
    void access$1(org.catrobat.paintroid.pocketpaint.MainActivity) -> a
org.catrobat.paintroid.pocketpaint.MainActivity$1 -> org.catrobat.paintroid.pocketpaint.b:
    org.catrobat.paintroid.pocketpaint.MainActivity this$0 -> a
    void run(android.graphics.Bitmap) -> a
org.catrobat.paintroid.pocketpaint.MainActivity$2 -> org.catrobat.paintroid.pocketpaint.c:
    org.catrobat.paintroid.pocketpaint.MainActivity this$0 -> a
    void run(android.graphics.Bitmap) -> a
org.catrobat.paintroid.pocketpaint.MainActivity$3 -> org.catrobat.paintroid.pocketpaint.d:
    org.catrobat.paintroid.pocketpaint.MainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.catrobat.paintroid.pocketpaint.MainActivity$4 -> org.catrobat.paintroid.pocketpaint.e:
    org.catrobat.paintroid.pocketpaint.MainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.catrobat.paintroid.pocketpaint.MainActivity$5 -> org.catrobat.paintroid.pocketpaint.f:
    org.catrobat.paintroid.pocketpaint.MainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.catrobat.paintroid.pocketpaint.MainActivity$6 -> org.catrobat.paintroid.pocketpaint.g:
    org.catrobat.paintroid.pocketpaint.MainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.catrobat.paintroid.pocketpaint.MenuFileActivity -> org.catrobat.paintroid.pocketpaint.MenuFileActivity:
    boolean loadBitmapFailed -> p
    android.net.Uri mCameraImageUri -> m
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> b
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void takePhoto() -> f
    void loadBitmapFromFileAndRun(java.io.File,org.catrobat.paintroid.pocketpaint.MenuFileActivity$RunnableWithBitmap) -> a
    void saveFile(java.lang.String) -> a
    void loadBitmapFromUri(android.net.Uri) -> a
    void initialiseNewBitmap() -> g
org.catrobat.paintroid.pocketpaint.MenuFileActivity$1 -> org.catrobat.paintroid.pocketpaint.h:
    org.catrobat.paintroid.pocketpaint.MenuFileActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.catrobat.paintroid.pocketpaint.MenuFileActivity$10 -> org.catrobat.paintroid.pocketpaint.i:
    org.catrobat.paintroid.pocketpaint.MenuFileActivity this$0 -> a
    android.net.Uri val$uri -> b
    org.catrobat.paintroid.pocketpaint.MenuFileActivity$RunnableWithBitmap val$runnable -> c
    android.app.ProgressDialog val$dialog -> d
    void run() -> run
org.catrobat.paintroid.pocketpaint.MenuFileActivity$2 -> org.catrobat.paintroid.pocketpaint.j:
    org.catrobat.paintroid.pocketpaint.MenuFileActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.catrobat.paintroid.pocketpaint.MenuFileActivity$3 -> org.catrobat.paintroid.pocketpaint.k:
    org.catrobat.paintroid.pocketpaint.MenuFileActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.catrobat.paintroid.pocketpaint.MenuFileActivity$4 -> org.catrobat.paintroid.pocketpaint.l:
    org.catrobat.paintroid.pocketpaint.MenuFileActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.catrobat.paintroid.pocketpaint.MenuFileActivity$5 -> org.catrobat.paintroid.pocketpaint.m:
    org.catrobat.paintroid.pocketpaint.MenuFileActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.catrobat.paintroid.pocketpaint.MenuFileActivity$6 -> org.catrobat.paintroid.pocketpaint.n:
    org.catrobat.paintroid.pocketpaint.MenuFileActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.catrobat.paintroid.pocketpaint.MenuFileActivity$7 -> org.catrobat.paintroid.pocketpaint.o:
    org.catrobat.paintroid.pocketpaint.MenuFileActivity this$0 -> a
    java.io.File val$file -> b
    org.catrobat.paintroid.pocketpaint.MenuFileActivity$RunnableWithBitmap val$runnable -> c
    android.app.ProgressDialog val$dialog -> d
    void run() -> run
org.catrobat.paintroid.pocketpaint.MenuFileActivity$8 -> org.catrobat.paintroid.pocketpaint.p:
    org.catrobat.paintroid.pocketpaint.MenuFileActivity this$0 -> a
    void run(android.graphics.Bitmap) -> a
org.catrobat.paintroid.pocketpaint.MenuFileActivity$9 -> org.catrobat.paintroid.pocketpaint.q:
    org.catrobat.paintroid.pocketpaint.MenuFileActivity this$0 -> a
    void run(android.graphics.Bitmap) -> a
org.catrobat.paintroid.pocketpaint.MenuFileActivity$ACTION -> org.catrobat.paintroid.pocketpaint.r:
    org.catrobat.paintroid.pocketpaint.MenuFileActivity$ACTION SAVE -> a
    org.catrobat.paintroid.pocketpaint.MenuFileActivity$ACTION CANCEL -> b
    org.catrobat.paintroid.pocketpaint.MenuFileActivity$ACTION[] ENUM$VALUES -> c
    org.catrobat.paintroid.pocketpaint.MenuFileActivity$ACTION[] values() -> values
    org.catrobat.paintroid.pocketpaint.MenuFileActivity$ACTION valueOf(java.lang.String) -> valueOf
org.catrobat.paintroid.pocketpaint.MenuFileActivity$RunnableWithBitmap -> org.catrobat.paintroid.pocketpaint.s:
    org.catrobat.paintroid.pocketpaint.MenuFileActivity this$0 -> b
    void run(android.graphics.Bitmap) -> a
org.catrobat.paintroid.pocketpaint.PaintroidApplication -> org.catrobat.paintroid.pocketpaint.PaintroidApplication:
    android.content.Context applicationContext -> a
    org.catrobat.paintroid.pocketpaint.ui.DrawingSurface drawingSurface -> b
    org.catrobat.paintroid.pocketpaint.command.CommandManager commandManager -> c
    org.catrobat.paintroid.pocketpaint.tools.Tool currentTool -> d
    org.catrobat.paintroid.pocketpaint.ui.Perspective perspective -> e
    boolean openedFromCatroid -> f
    void onCreate() -> onCreate
    java.lang.String getVersionName(android.content.Context) -> a
org.catrobat.paintroid.pocketpaint.command.Command -> org.catrobat.paintroid.pocketpaint.a.a:
    void run(android.graphics.Canvas,android.graphics.Bitmap) -> a
    void freeResources() -> a
org.catrobat.paintroid.pocketpaint.command.CommandManager -> org.catrobat.paintroid.pocketpaint.a.b:
    boolean hasCommands() -> a
    void setOriginalBitmap(android.graphics.Bitmap) -> a
    void resetAndClear() -> b
    org.catrobat.paintroid.pocketpaint.command.Command getNextCommand() -> c
    boolean commitCommand(org.catrobat.paintroid.pocketpaint.command.Command) -> a
    void undo() -> d
    void redo() -> e
org.catrobat.paintroid.pocketpaint.command.UndoRedoManager -> org.catrobat.paintroid.pocketpaint.a.c:
    org.catrobat.paintroid.pocketpaint.command.UndoRedoManager mInstance -> a
    org.catrobat.paintroid.pocketpaint.ui.Statusbar mStatusbar -> b
    int[] $SWITCH_TABLE$org$catrobat$paintroid$pocketpaint$command$UndoRedoManager$StatusMode -> c
    org.catrobat.paintroid.pocketpaint.command.UndoRedoManager getInstance() -> a
    void setStatusbar(org.catrobat.paintroid.pocketpaint.ui.Statusbar) -> a
    void update(org.catrobat.paintroid.pocketpaint.command.UndoRedoManager$StatusMode) -> a
    int[] $SWITCH_TABLE$org$catrobat$paintroid$pocketpaint$command$UndoRedoManager$StatusMode() -> b
org.catrobat.paintroid.pocketpaint.command.UndoRedoManager$StatusMode -> org.catrobat.paintroid.pocketpaint.a.d:
    org.catrobat.paintroid.pocketpaint.command.UndoRedoManager$StatusMode ENABLE_UNDO -> a
    org.catrobat.paintroid.pocketpaint.command.UndoRedoManager$StatusMode DISABLE_UNDO -> b
    org.catrobat.paintroid.pocketpaint.command.UndoRedoManager$StatusMode ENABLE_REDO -> c
    org.catrobat.paintroid.pocketpaint.command.UndoRedoManager$StatusMode DISABLE_REDO -> d
    org.catrobat.paintroid.pocketpaint.command.UndoRedoManager$StatusMode[] ENUM$VALUES -> e
    org.catrobat.paintroid.pocketpaint.command.UndoRedoManager$StatusMode[] values() -> values
    org.catrobat.paintroid.pocketpaint.command.UndoRedoManager$StatusMode valueOf(java.lang.String) -> valueOf
org.catrobat.paintroid.pocketpaint.command.implementation.BaseCommand -> org.catrobat.paintroid.pocketpaint.a.a.a:
    android.graphics.Paint mPaint -> a
    android.graphics.Bitmap mBitmap -> b
    java.io.File mFileToStoredBitmap -> c
    void freeResources() -> a
    void storeBitmap() -> b
    void notifyStatus(org.catrobat.paintroid.pocketpaint.command.implementation.BaseCommand$NOTIFY_STATES) -> a
org.catrobat.paintroid.pocketpaint.command.implementation.BaseCommand$NOTIFY_STATES -> org.catrobat.paintroid.pocketpaint.a.a.b:
    org.catrobat.paintroid.pocketpaint.command.implementation.BaseCommand$NOTIFY_STATES COMMAND_STARTED -> a
    org.catrobat.paintroid.pocketpaint.command.implementation.BaseCommand$NOTIFY_STATES COMMAND_DONE -> b
    org.catrobat.paintroid.pocketpaint.command.implementation.BaseCommand$NOTIFY_STATES COMMAND_FAILED -> c
    org.catrobat.paintroid.pocketpaint.command.implementation.BaseCommand$NOTIFY_STATES[] ENUM$VALUES -> d
    org.catrobat.paintroid.pocketpaint.command.implementation.BaseCommand$NOTIFY_STATES[] values() -> values
    org.catrobat.paintroid.pocketpaint.command.implementation.BaseCommand$NOTIFY_STATES valueOf(java.lang.String) -> valueOf
org.catrobat.paintroid.pocketpaint.command.implementation.BitmapCommand -> org.catrobat.paintroid.pocketpaint.a.a.c:
    boolean mResetScaleAndTranslation -> d
    void run(android.graphics.Canvas,android.graphics.Bitmap) -> a
org.catrobat.paintroid.pocketpaint.command.implementation.ClearCommand -> org.catrobat.paintroid.pocketpaint.a.a.d:
    int mColor -> d
    void run(android.graphics.Canvas,android.graphics.Bitmap) -> a
org.catrobat.paintroid.pocketpaint.command.implementation.CommandManagerImplementation -> org.catrobat.paintroid.pocketpaint.a.a.e:
    java.util.LinkedList mCommandList -> a
    int mCommandCounter -> b
    int mCommandIndex -> c
    android.graphics.Bitmap mOriginalBitmap -> d
    boolean hasCommands() -> a
    void setOriginalBitmap(android.graphics.Bitmap) -> a
    void resetAndClear() -> b
    org.catrobat.paintroid.pocketpaint.command.Command getNextCommand() -> c
    boolean commitCommand(org.catrobat.paintroid.pocketpaint.command.Command) -> a
    void undo() -> d
    void redo() -> e
    void deleteFailedCommand(org.catrobat.paintroid.pocketpaint.command.Command) -> b
    void update(java.util.Observable,java.lang.Object) -> update
org.catrobat.paintroid.pocketpaint.command.implementation.CropCommand -> org.catrobat.paintroid.pocketpaint.a.a.f:
    int mCropCoordinateXLeft -> d
    int mCropCoordinateYTop -> e
    int mCropCoordinateXRight -> f
    int mCropCoordinateYBottom -> g
    void run(android.graphics.Canvas,android.graphics.Bitmap) -> a
org.catrobat.paintroid.pocketpaint.command.implementation.FillCommand -> org.catrobat.paintroid.pocketpaint.a.a.g:
    android.graphics.Point mClickedPixel -> d
    void run(android.graphics.Canvas,android.graphics.Bitmap) -> a
org.catrobat.paintroid.pocketpaint.command.implementation.FlipCommand -> org.catrobat.paintroid.pocketpaint.a.a.h:
    org.catrobat.paintroid.pocketpaint.command.implementation.FlipCommand$FlipDirection mFlipDirection -> d
    int[] $SWITCH_TABLE$org$catrobat$paintroid$pocketpaint$command$implementation$FlipCommand$FlipDirection -> e
    void run(android.graphics.Canvas,android.graphics.Bitmap) -> a
    int[] $SWITCH_TABLE$org$catrobat$paintroid$pocketpaint$command$implementation$FlipCommand$FlipDirection() -> c
org.catrobat.paintroid.pocketpaint.command.implementation.FlipCommand$FlipDirection -> org.catrobat.paintroid.pocketpaint.a.a.i:
    org.catrobat.paintroid.pocketpaint.command.implementation.FlipCommand$FlipDirection FLIP_HORIZONTAL -> a
    org.catrobat.paintroid.pocketpaint.command.implementation.FlipCommand$FlipDirection FLIP_VERTICAL -> b
    org.catrobat.paintroid.pocketpaint.command.implementation.FlipCommand$FlipDirection[] ENUM$VALUES -> c
    org.catrobat.paintroid.pocketpaint.command.implementation.FlipCommand$FlipDirection[] values() -> values
    org.catrobat.paintroid.pocketpaint.command.implementation.FlipCommand$FlipDirection valueOf(java.lang.String) -> valueOf
org.catrobat.paintroid.pocketpaint.command.implementation.PathCommand -> org.catrobat.paintroid.pocketpaint.a.a.j:
    android.graphics.Path mPath -> d
    void run(android.graphics.Canvas,android.graphics.Bitmap) -> a
org.catrobat.paintroid.pocketpaint.command.implementation.PointCommand -> org.catrobat.paintroid.pocketpaint.a.a.k:
    android.graphics.PointF mPoint -> d
    void run(android.graphics.Canvas,android.graphics.Bitmap) -> a
org.catrobat.paintroid.pocketpaint.command.implementation.StampCommand -> org.catrobat.paintroid.pocketpaint.a.a.l:
    android.graphics.Point mCoordinates -> d
    float mBoxWidth -> e
    float mBoxHeight -> f
    float mBoxRotation -> g
    android.graphics.RectF mBoxRect -> h
    void run(android.graphics.Canvas,android.graphics.Bitmap) -> a
org.catrobat.paintroid.pocketpaint.dialog.BaseDialog -> org.catrobat.paintroid.pocketpaint.dialog.a:
org.catrobat.paintroid.pocketpaint.dialog.BrushPickerDialog -> org.catrobat.paintroid.pocketpaint.dialog.b:
    org.catrobat.paintroid.pocketpaint.dialog.BrushPickerDialog instance -> V
    java.util.ArrayList mBrushChangedListener -> W
    android.graphics.Paint mCurrentPaint -> X
    android.content.Context mContext -> Y
    android.widget.TextView mBrushSizeText -> Z
    android.widget.SeekBar mBrushWidthSeekBar -> aa
    android.widget.RadioButton mRbtnCircle -> ab
    android.widget.RadioButton mRbtnRect -> ac
    org.catrobat.paintroid.pocketpaint.dialog.BrushPickerDialog getInstance() -> E
    void init(android.content.Context) -> a
    void setCurrentPaint(android.graphics.Paint) -> a
    void addBrushChangedListener(org.catrobat.paintroid.pocketpaint.dialog.BrushPickerDialog$OnBrushChangedListener) -> a
    void updateStrokeChange(int) -> b
    void updateStrokeCap(android.graphics.Paint$Cap) -> a
    android.app.Dialog onCreateDialog$5709b310() -> b
    void onClick(android.view.View) -> onClick
    void onStart() -> c
    void onClick(android.content.DialogInterface,int) -> onClick
    void access$0(org.catrobat.paintroid.pocketpaint.dialog.BrushPickerDialog,int) -> a
    android.widget.TextView access$1(org.catrobat.paintroid.pocketpaint.dialog.BrushPickerDialog) -> a
org.catrobat.paintroid.pocketpaint.dialog.BrushPickerDialog$OnBrushChangedListener -> org.catrobat.paintroid.pocketpaint.dialog.c:
    void setCap(android.graphics.Paint$Cap) -> a
    void setStroke(int) -> a
org.catrobat.paintroid.pocketpaint.dialog.BrushPickerDialog$OnBrushChangedWidthSeekBarListener -> org.catrobat.paintroid.pocketpaint.dialog.d:
    org.catrobat.paintroid.pocketpaint.dialog.BrushPickerDialog this$0 -> a
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
org.catrobat.paintroid.pocketpaint.dialog.DialogAbout -> org.catrobat.paintroid.pocketpaint.dialog.e:
    android.app.Dialog onCreateDialog$5709b310() -> b
    void onClick(android.content.DialogInterface,int) -> onClick
org.catrobat.paintroid.pocketpaint.dialog.DialogProgressIntermediate -> org.catrobat.paintroid.pocketpaint.dialog.f:
org.catrobat.paintroid.pocketpaint.dialog.DialogSaveFile -> org.catrobat.paintroid.pocketpaint.dialog.g:
    org.catrobat.paintroid.pocketpaint.MenuFileActivity mContext -> V
    android.os.Bundle mBundle -> W
    android.widget.EditText mEditText -> X
    java.lang.String mDefaultFileName -> Y
    java.lang.String actualFilename -> Z
    android.app.Dialog onCreateDialog$5709b310() -> b
    void onClick(android.content.DialogInterface,int) -> onClick
    java.lang.String getDefaultFileName() -> E
    android.os.Bundle access$0(org.catrobat.paintroid.pocketpaint.dialog.DialogSaveFile) -> a
    org.catrobat.paintroid.pocketpaint.MenuFileActivity access$1(org.catrobat.paintroid.pocketpaint.dialog.DialogSaveFile) -> b
org.catrobat.paintroid.pocketpaint.dialog.DialogSaveFile$1 -> org.catrobat.paintroid.pocketpaint.dialog.h:
    org.catrobat.paintroid.pocketpaint.dialog.DialogSaveFile this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.catrobat.paintroid.pocketpaint.dialog.DialogSaveFile$2 -> org.catrobat.paintroid.pocketpaint.dialog.i:
    org.catrobat.paintroid.pocketpaint.dialog.DialogSaveFile this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
org.catrobat.paintroid.pocketpaint.dialog.DialogSaveFile$3 -> org.catrobat.paintroid.pocketpaint.dialog.j:
    org.catrobat.paintroid.pocketpaint.dialog.DialogSaveFile this$0 -> a
    java.lang.String val$filename -> b
    void onClick(android.content.DialogInterface,int) -> onClick
org.catrobat.paintroid.pocketpaint.dialog.DialogSaveFile$4 -> org.catrobat.paintroid.pocketpaint.dialog.k:
    org.catrobat.paintroid.pocketpaint.dialog.DialogSaveFile this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.catrobat.paintroid.pocketpaint.dialog.InfoDialog -> org.catrobat.paintroid.pocketpaint.dialog.l:
    org.catrobat.paintroid.pocketpaint.dialog.InfoDialog$DialogType mDialogType -> V
    int mMessageResource -> W
    int mTitleResource -> X
    android.app.Dialog onCreateDialog$5709b310() -> b
    void onClick(android.content.DialogInterface,int) -> onClick
org.catrobat.paintroid.pocketpaint.dialog.InfoDialog$DialogType -> org.catrobat.paintroid.pocketpaint.dialog.m:
    org.catrobat.paintroid.pocketpaint.dialog.InfoDialog$DialogType INFO -> a
    org.catrobat.paintroid.pocketpaint.dialog.InfoDialog$DialogType WARNING -> b
    int mImageResource -> c
    int mTitleResource -> d
    org.catrobat.paintroid.pocketpaint.dialog.InfoDialog$DialogType[] ENUM$VALUES -> e
    int getImageResource() -> a
    org.catrobat.paintroid.pocketpaint.dialog.InfoDialog$DialogType[] values() -> values
    org.catrobat.paintroid.pocketpaint.dialog.InfoDialog$DialogType valueOf(java.lang.String) -> valueOf
org.catrobat.paintroid.pocketpaint.dialog.ToolsDialog -> org.catrobat.paintroid.pocketpaint.dialog.n:
    org.catrobat.paintroid.pocketpaint.dialog.ToolsDialog instance -> a
    org.catrobat.paintroid.pocketpaint.ui.button.ToolsAdapter mToolButtonAdapter -> b
    org.catrobat.paintroid.pocketpaint.MainActivity mParent -> c
    org.catrobat.paintroid.pocketpaint.dialog.ToolsDialog getInstance() -> a
    void init(org.catrobat.paintroid.pocketpaint.MainActivity) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
org.catrobat.paintroid.pocketpaint.dialog.colorpicker.CheckeredTransparentLinearLayout -> org.catrobat.paintroid.pocketpaint.dialog.colorpicker.CheckeredTransparentLinearLayout:
    android.graphics.Paint mColorPaint -> a
    void updateBackground() -> a
org.catrobat.paintroid.pocketpaint.dialog.colorpicker.ColorPickerDialog -> org.catrobat.paintroid.pocketpaint.dialog.colorpicker.a:
    org.catrobat.paintroid.pocketpaint.dialog.colorpicker.ColorPickerView mColorPickerView -> c
    java.util.ArrayList mOnColorPickedListener -> d
    int mNewColor -> a
    android.widget.Button mButtonNewColor -> e
    org.catrobat.paintroid.pocketpaint.dialog.colorpicker.CheckeredTransparentLinearLayout mBaseButtonLayout -> f
    android.graphics.Paint mBackgroundPaint -> b
    org.catrobat.paintroid.pocketpaint.dialog.colorpicker.ColorPickerDialog instance -> g
    org.catrobat.paintroid.pocketpaint.dialog.colorpicker.ColorPickerDialog getInstance() -> a
    void init(android.content.Context) -> a
    void addOnColorPickedListener(org.catrobat.paintroid.pocketpaint.dialog.colorpicker.ColorPickerDialog$OnColorPickedListener) -> a
    void updateColorChange(int) -> b
    void onCreate(android.os.Bundle) -> onCreate
    void setInitialColor(int) -> a
    void changeNewColor(int) -> c
    void access$0(org.catrobat.paintroid.pocketpaint.dialog.colorpicker.ColorPickerDialog,int) -> a
    void access$1(org.catrobat.paintroid.pocketpaint.dialog.colorpicker.ColorPickerDialog,int) -> b
org.catrobat.paintroid.pocketpaint.dialog.colorpicker.ColorPickerDialog$1 -> org.catrobat.paintroid.pocketpaint.dialog.colorpicker.b:
    org.catrobat.paintroid.pocketpaint.dialog.colorpicker.ColorPickerDialog this$0 -> a
    void onClick(android.view.View) -> onClick
org.catrobat.paintroid.pocketpaint.dialog.colorpicker.ColorPickerDialog$2 -> org.catrobat.paintroid.pocketpaint.dialog.colorpicker.c:
    org.catrobat.paintroid.pocketpaint.dialog.colorpicker.ColorPickerDialog this$0 -> a
    void colorChanged(int) -> a
org.catrobat.paintroid.pocketpaint.dialog.colorpicker.ColorPickerDialog$OnColorPickedListener -> org.catrobat.paintroid.pocketpaint.dialog.colorpicker.d:
    void colorChanged(int) -> a
org.catrobat.paintroid.pocketpaint.dialog.colorpicker.ColorPickerPresetColorButton -> org.catrobat.paintroid.pocketpaint.dialog.colorpicker.e:
    android.graphics.Paint mColorPaint -> a
    int mWidth -> b
    int mHeight -> c
    void draw(android.graphics.Canvas) -> draw
    void onMeasure(int,int) -> onMeasure
org.catrobat.paintroid.pocketpaint.dialog.colorpicker.ColorPickerView -> org.catrobat.paintroid.pocketpaint.dialog.colorpicker.ColorPickerView:
    java.lang.String RGB_TAG -> a
    java.lang.String PRE_TAG -> b
    org.catrobat.paintroid.pocketpaint.dialog.colorpicker.RgbSelectorView mRGBSelectorView -> c
    org.catrobat.paintroid.pocketpaint.dialog.colorpicker.PresetSelectorView mPreSelectorView -> d
    android.widget.TabHost mTabHost -> e
    int maxViewWidth -> f
    int maxViewHeight -> g
    int mSelectedColor -> h
    org.catrobat.paintroid.pocketpaint.dialog.colorpicker.ColorPickerView$OnColorChangedListener mListener -> i
    void setSelectedColor(int) -> a
    void init() -> a
    android.view.View createTabView(android.content.Context,int) -> a
    void setOnColorChangedListener(org.catrobat.paintroid.pocketpaint.dialog.colorpicker.ColorPickerView$OnColorChangedListener) -> a
    void onMeasure(int,int) -> onMeasure
    java.lang.String access$0(org.catrobat.paintroid.pocketpaint.dialog.colorpicker.ColorPickerView) -> a
    org.catrobat.paintroid.pocketpaint.dialog.colorpicker.RgbSelectorView access$1(org.catrobat.paintroid.pocketpaint.dialog.colorpicker.ColorPickerView) -> b
    java.lang.String access$2(org.catrobat.paintroid.pocketpaint.dialog.colorpicker.ColorPickerView) -> c
    org.catrobat.paintroid.pocketpaint.dialog.colorpicker.PresetSelectorView access$3(org.catrobat.paintroid.pocketpaint.dialog.colorpicker.ColorPickerView) -> d
org.catrobat.paintroid.pocketpaint.dialog.colorpicker.ColorPickerView$1 -> org.catrobat.paintroid.pocketpaint.dialog.colorpicker.f:
    org.catrobat.paintroid.pocketpaint.dialog.colorpicker.ColorPickerView this$0 -> a
    void colorChanged(int) -> a
org.catrobat.paintroid.pocketpaint.dialog.colorpicker.ColorPickerView$2 -> org.catrobat.paintroid.pocketpaint.dialog.colorpicker.g:
    org.catrobat.paintroid.pocketpaint.dialog.colorpicker.ColorPickerView this$0 -> a
    void colorChanged(int) -> a
org.catrobat.paintroid.pocketpaint.dialog.colorpicker.ColorPickerView$ColorTabContentFactory -> org.catrobat.paintroid.pocketpaint.dialog.colorpicker.h:
    org.catrobat.paintroid.pocketpaint.dialog.colorpicker.ColorPickerView this$0 -> a
    android.view.View createTabContent(java.lang.String) -> createTabContent
org.catrobat.paintroid.pocketpaint.dialog.colorpicker.ColorPickerView$OnColorChangedListener -> org.catrobat.paintroid.pocketpaint.dialog.colorpicker.i:
    void colorChanged(int) -> a
org.catrobat.paintroid.pocketpaint.dialog.colorpicker.PresetSelectorView -> org.catrobat.paintroid.pocketpaint.dialog.colorpicker.PresetSelectorView:
    int mSelectedColor -> b
    android.content.res.TypedArray mPresetColors -> c
    float mScale -> a
    android.widget.TableLayout mTableLayout -> d
    int COLOR_BUTTON_MARGIN -> e
    org.catrobat.paintroid.pocketpaint.dialog.colorpicker.PresetSelectorView$OnColorChangedListener mOnColorChangedListener -> f
    void init(android.content.Context) -> a
    void setSelectedColor(int) -> a
    void setOnColorChangedListener(org.catrobat.paintroid.pocketpaint.dialog.colorpicker.PresetSelectorView$OnColorChangedListener) -> a
    android.content.res.TypedArray access$0(org.catrobat.paintroid.pocketpaint.dialog.colorpicker.PresetSelectorView) -> a
    void access$1(org.catrobat.paintroid.pocketpaint.dialog.colorpicker.PresetSelectorView,int) -> a
    void access$2(org.catrobat.paintroid.pocketpaint.dialog.colorpicker.PresetSelectorView) -> b
org.catrobat.paintroid.pocketpaint.dialog.colorpicker.PresetSelectorView$1 -> org.catrobat.paintroid.pocketpaint.dialog.colorpicker.j:
    org.catrobat.paintroid.pocketpaint.dialog.colorpicker.PresetSelectorView this$0 -> a
    void onClick(android.view.View) -> onClick
org.catrobat.paintroid.pocketpaint.dialog.colorpicker.PresetSelectorView$OnColorChangedListener -> org.catrobat.paintroid.pocketpaint.dialog.colorpicker.k:
    void colorChanged(int) -> a
org.catrobat.paintroid.pocketpaint.dialog.colorpicker.RgbSelectorView -> org.catrobat.paintroid.pocketpaint.dialog.colorpicker.RgbSelectorView:
    android.widget.SeekBar mSeekBarRed -> a
    android.widget.SeekBar mSeekBarGreen -> b
    android.widget.SeekBar mSeekBarBlue -> c
    android.widget.SeekBar mSeekBarAlpha -> d
    android.widget.TextView mTextViewRed -> e
    android.widget.TextView mTextViewGreen -> f
    android.widget.TextView mTextViewBlue -> g
    android.widget.TextView mTextViewAlpha -> h
    org.catrobat.paintroid.pocketpaint.dialog.colorpicker.RgbSelectorView$OnColorChangedListener mOnColorChangedListener -> i
    void init() -> a
    void setSelectedColor(int) -> a
    void setOnColorChangedListener(org.catrobat.paintroid.pocketpaint.dialog.colorpicker.RgbSelectorView$OnColorChangedListener) -> a
    void access$0(org.catrobat.paintroid.pocketpaint.dialog.colorpicker.RgbSelectorView) -> a
org.catrobat.paintroid.pocketpaint.dialog.colorpicker.RgbSelectorView$1 -> org.catrobat.paintroid.pocketpaint.dialog.colorpicker.l:
    org.catrobat.paintroid.pocketpaint.dialog.colorpicker.RgbSelectorView this$0 -> a
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
org.catrobat.paintroid.pocketpaint.dialog.colorpicker.RgbSelectorView$OnColorChangedListener -> org.catrobat.paintroid.pocketpaint.dialog.colorpicker.m:
    void colorChanged(int) -> a
org.catrobat.paintroid.pocketpaint.listener.DrawingSurfaceListener -> org.catrobat.paintroid.pocketpaint.b.a:
    int BLOCKING_TIME -> a
    org.catrobat.paintroid.pocketpaint.ui.Perspective mPerspective -> b
    float mPointerDistance -> c
    android.graphics.PointF mPointerMean -> d
    org.catrobat.paintroid.pocketpaint.listener.DrawingSurfaceListener$TouchMode mTouchMode -> e
    long mZoomTimeStamp -> f
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
org.catrobat.paintroid.pocketpaint.listener.DrawingSurfaceListener$TouchMode -> org.catrobat.paintroid.pocketpaint.b.b:
    org.catrobat.paintroid.pocketpaint.listener.DrawingSurfaceListener$TouchMode DRAW -> a
    org.catrobat.paintroid.pocketpaint.listener.DrawingSurfaceListener$TouchMode PINCH -> b
    org.catrobat.paintroid.pocketpaint.listener.DrawingSurfaceListener$TouchMode[] ENUM$VALUES -> c
    org.catrobat.paintroid.pocketpaint.listener.DrawingSurfaceListener$TouchMode[] values() -> values
    org.catrobat.paintroid.pocketpaint.listener.DrawingSurfaceListener$TouchMode valueOf(java.lang.String) -> valueOf
org.catrobat.paintroid.pocketpaint.tools.Tool -> org.catrobat.paintroid.pocketpaint.c.a:
    boolean handleDown(android.graphics.PointF) -> a
    boolean handleMove(android.graphics.PointF) -> b
    boolean handleUp(android.graphics.PointF) -> c
    void changePaintStrokeWidth(int) -> a
    void changePaintStrokeCap(android.graphics.Paint$Cap) -> a
    void setDrawPaint(android.graphics.Paint) -> a
    android.graphics.Paint getDrawPaint() -> a
    void draw(android.graphics.Canvas) -> a
    org.catrobat.paintroid.pocketpaint.tools.ToolType getToolType() -> b
    int getAttributeButtonResource(org.catrobat.paintroid.pocketpaint.ui.Statusbar$ToolButtonIDs) -> a
    void attributeButtonClick(org.catrobat.paintroid.pocketpaint.ui.Statusbar$ToolButtonIDs) -> b
    void resetInternalState() -> c
org.catrobat.paintroid.pocketpaint.tools.ToolFactory -> org.catrobat.paintroid.pocketpaint.c.b:
    int[] $SWITCH_TABLE$org$catrobat$paintroid$pocketpaint$tools$ToolType -> a
    org.catrobat.paintroid.pocketpaint.tools.Tool createTool(android.content.Context,org.catrobat.paintroid.pocketpaint.tools.ToolType) -> a
    int[] $SWITCH_TABLE$org$catrobat$paintroid$pocketpaint$tools$ToolType() -> a
org.catrobat.paintroid.pocketpaint.tools.ToolType -> org.catrobat.paintroid.pocketpaint.c.c:
    org.catrobat.paintroid.pocketpaint.tools.ToolType ZOOM -> a
    org.catrobat.paintroid.pocketpaint.tools.ToolType PIPETTE -> b
    org.catrobat.paintroid.pocketpaint.tools.ToolType BRUSH -> c
    org.catrobat.paintroid.pocketpaint.tools.ToolType UNDO -> d
    org.catrobat.paintroid.pocketpaint.tools.ToolType REDO -> e
    org.catrobat.paintroid.pocketpaint.tools.ToolType NONE -> f
    org.catrobat.paintroid.pocketpaint.tools.ToolType FILL -> g
    org.catrobat.paintroid.pocketpaint.tools.ToolType STAMP -> h
    org.catrobat.paintroid.pocketpaint.tools.ToolType CURSOR -> i
    org.catrobat.paintroid.pocketpaint.tools.ToolType IMPORTPNG -> j
    org.catrobat.paintroid.pocketpaint.tools.ToolType CROP -> k
    org.catrobat.paintroid.pocketpaint.tools.ToolType ERASER -> l
    org.catrobat.paintroid.pocketpaint.tools.ToolType FLIP -> m
    org.catrobat.paintroid.pocketpaint.tools.ToolType RECT -> n
    org.catrobat.paintroid.pocketpaint.tools.ToolType MOVE -> o
    int mNameResource -> p
    int mImageResouce -> q
    int mHelpTextResource -> r
    boolean mAllowColorChange -> s
    org.catrobat.paintroid.pocketpaint.tools.ToolType[] ENUM$VALUES -> t
    int getNameResource() -> a
    int getImageResource() -> b
    int getHelpTextResource() -> c
    boolean isColorChangeAllowed() -> d
    org.catrobat.paintroid.pocketpaint.tools.ToolType[] values() -> values
    org.catrobat.paintroid.pocketpaint.tools.ToolType valueOf(java.lang.String) -> valueOf
org.catrobat.paintroid.pocketpaint.tools.ToolWithShape -> org.catrobat.paintroid.pocketpaint.c.d:
org.catrobat.paintroid.pocketpaint.tools.helper.floodfill.FloodFillRange -> org.catrobat.paintroid.pocketpaint.c.a.a.a:
    int startX -> a
    int endX -> b
    int y -> c
org.catrobat.paintroid.pocketpaint.tools.helper.floodfill.FloodFillRangeQueue -> org.catrobat.paintroid.pocketpaint.c.a.a.b:
    org.catrobat.paintroid.pocketpaint.tools.helper.floodfill.FloodFillRange[] mArray -> a
    int mHead -> b
    int mCount -> c
    int getCount() -> a
    void addToEndOfQueue(org.catrobat.paintroid.pocketpaint.tools.helper.floodfill.FloodFillRange) -> a
    org.catrobat.paintroid.pocketpaint.tools.helper.floodfill.FloodFillRange removeAndReturnFirstElement() -> b
org.catrobat.paintroid.pocketpaint.tools.helper.floodfill.QueueLinearFloodFiller -> org.catrobat.paintroid.pocketpaint.c.a.a.c:
    org.catrobat.paintroid.pocketpaint.tools.helper.floodfill.FloodFillRangeQueue mRanges -> a
    int mBitmapWidth -> b
    int mBitmapHeight -> c
    boolean[] mPixelsChecked -> d
    int[] mPixels -> e
    int mTargetColor -> f
    int mReplacementColor -> g
    double mSelectionThreshold -> h
    void floodFill$361cf368(int[],int,int,android.graphics.Point,int,int) -> a
    void linearFill(int,int) -> a
    boolean checkPoint(int,int) -> b
org.catrobat.paintroid.pocketpaint.tools.implementation.BaseTool -> org.catrobat.paintroid.pocketpaint.c.b.a:
    android.graphics.Paint CHECKERED_PATTERN -> a
    android.graphics.Paint mBitmapPaint -> b
    android.graphics.Paint mCanvasPaint -> c
    org.catrobat.paintroid.pocketpaint.tools.ToolType mToolType -> d
    android.content.Context mContext -> e
    android.graphics.PointF mMovedDistance -> f
    android.graphics.PointF mPreviousEventCoordinate -> g
    android.app.Dialog mProgressDialog -> h
    org.catrobat.paintroid.pocketpaint.dialog.BrushPickerDialog$OnBrushChangedListener mStroke -> k
    org.catrobat.paintroid.pocketpaint.dialog.colorpicker.ColorPickerDialog$OnColorPickedListener mColor -> i
    android.graphics.PorterDuffXfermode eraseXfermode -> j
    int[] $SWITCH_TABLE$org$catrobat$paintroid$pocketpaint$tools$ToolType -> l
    int[] $SWITCH_TABLE$org$catrobat$paintroid$pocketpaint$ui$Statusbar$ToolButtonIDs -> m
    void changePaintColor(int) -> b
    void changePaintStrokeWidth(int) -> a
    void changePaintStrokeCap(android.graphics.Paint$Cap) -> a
    void setDrawPaint(android.graphics.Paint) -> a
    android.graphics.Paint getDrawPaint() -> a
    org.catrobat.paintroid.pocketpaint.tools.ToolType getToolType() -> b
    void showColorPicker() -> d
    void showBrushPicker() -> e
    void attributeButtonClick(org.catrobat.paintroid.pocketpaint.ui.Statusbar$ToolButtonIDs) -> b
    int getAttributeButtonResource(org.catrobat.paintroid.pocketpaint.ui.Statusbar$ToolButtonIDs) -> a
    int getStrokeColorResource() -> f
    void update(java.util.Observable,java.lang.Object) -> update
    int[] $SWITCH_TABLE$org$catrobat$paintroid$pocketpaint$tools$ToolType() -> g
    int[] $SWITCH_TABLE$org$catrobat$paintroid$pocketpaint$ui$Statusbar$ToolButtonIDs() -> h
org.catrobat.paintroid.pocketpaint.tools.implementation.BaseTool$1 -> org.catrobat.paintroid.pocketpaint.c.b.b:
    org.catrobat.paintroid.pocketpaint.tools.implementation.BaseTool this$0 -> a
    void colorChanged(int) -> a
org.catrobat.paintroid.pocketpaint.tools.implementation.BaseTool$2 -> org.catrobat.paintroid.pocketpaint.c.b.c:
    org.catrobat.paintroid.pocketpaint.tools.implementation.BaseTool this$0 -> a
    void setCap(android.graphics.Paint$Cap) -> a
    void setStroke(int) -> a
org.catrobat.paintroid.pocketpaint.tools.implementation.BaseToolWithRectangleShape -> org.catrobat.paintroid.pocketpaint.c.b.d:
    android.graphics.Paint$Cap DEFAULT_STROKE_CAP -> k
    android.graphics.PorterDuffXfermode TRANSPARENCY_XFER_MODE -> l
    float mBoxWidth -> m
    float mBoxHeight -> n
    float mBoxRotation -> o
    float mBoxResizeMargin -> p
    float mRotationSymbolDistance -> q
    float mRotationSymbolWidth -> r
    float mToolStrokeWidth -> s
    org.catrobat.paintroid.pocketpaint.tools.implementation.BaseToolWithRectangleShape$ResizeAction mResizeAction -> t
    org.catrobat.paintroid.pocketpaint.tools.implementation.BaseToolWithRectangleShape$FloatingBoxAction mCurrentAction -> u
    org.catrobat.paintroid.pocketpaint.tools.implementation.BaseToolWithRectangleShape$RotatePosition mRotatePosition -> v
    android.graphics.Bitmap mDrawingBitmap -> w
    boolean mRespectImageBounds -> B
    boolean mRotationEnabled -> C
    boolean mBackgroundShadowEnabled -> D
    boolean mResizePointsVisible -> E
    boolean mStatusIconEnabled -> F
    boolean mIsDown -> G
    int[] $SWITCH_TABLE$org$catrobat$paintroid$pocketpaint$tools$implementation$BaseToolWithRectangleShape$FloatingBoxAction -> H
    int[] $SWITCH_TABLE$org$catrobat$paintroid$pocketpaint$tools$implementation$BaseToolWithRectangleShape$RotatePosition -> I
    int[] $SWITCH_TABLE$org$catrobat$paintroid$pocketpaint$tools$implementation$BaseToolWithRectangleShape$ResizeAction -> J
    void initScaleDependedValues() -> i
    void setBitmap(android.graphics.Bitmap) -> a
    boolean handleDown(android.graphics.PointF) -> a
    boolean handleMove(android.graphics.PointF) -> b
    boolean handleUp(android.graphics.PointF) -> c
    void draw(android.graphics.Canvas) -> a
    void drawRotationArrows(android.graphics.Canvas) -> c
    void setRespectImageBounds(boolean) -> a
    void setRotationEnabled(boolean) -> b
    void setResizePointsVisible$1385ff() -> g
    void onClickInBox() -> h
    void drawToolSpecifics(android.graphics.Canvas) -> b
    int[] $SWITCH_TABLE$org$catrobat$paintroid$pocketpaint$tools$implementation$BaseToolWithRectangleShape$FloatingBoxAction() -> j
    int[] $SWITCH_TABLE$org$catrobat$paintroid$pocketpaint$tools$implementation$BaseToolWithRectangleShape$RotatePosition() -> k
    int[] $SWITCH_TABLE$org$catrobat$paintroid$pocketpaint$tools$implementation$BaseToolWithRectangleShape$ResizeAction() -> l
org.catrobat.paintroid.pocketpaint.tools.implementation.BaseToolWithRectangleShape$FloatingBoxAction -> org.catrobat.paintroid.pocketpaint.c.b.e:
    org.catrobat.paintroid.pocketpaint.tools.implementation.BaseToolWithRectangleShape$FloatingBoxAction NONE -> a
    org.catrobat.paintroid.pocketpaint.tools.implementation.BaseToolWithRectangleShape$FloatingBoxAction MOVE -> b
    org.catrobat.paintroid.pocketpaint.tools.implementation.BaseToolWithRectangleShape$FloatingBoxAction RESIZE -> c
    org.catrobat.paintroid.pocketpaint.tools.implementation.BaseToolWithRectangleShape$FloatingBoxAction ROTATE -> d
    org.catrobat.paintroid.pocketpaint.tools.implementation.BaseToolWithRectangleShape$FloatingBoxAction[] ENUM$VALUES -> e
    org.catrobat.paintroid.pocketpaint.tools.implementation.BaseToolWithRectangleShape$FloatingBoxAction[] values() -> values
    org.catrobat.paintroid.pocketpaint.tools.implementation.BaseToolWithRectangleShape$FloatingBoxAction valueOf(java.lang.String) -> valueOf
org.catrobat.paintroid.pocketpaint.tools.implementation.BaseToolWithRectangleShape$ResizeAction -> org.catrobat.paintroid.pocketpaint.c.b.f:
    org.catrobat.paintroid.pocketpaint.tools.implementation.BaseToolWithRectangleShape$ResizeAction NONE -> a
    org.catrobat.paintroid.pocketpaint.tools.implementation.BaseToolWithRectangleShape$ResizeAction TOP -> b
    org.catrobat.paintroid.pocketpaint.tools.implementation.BaseToolWithRectangleShape$ResizeAction RIGHT -> c
    org.catrobat.paintroid.pocketpaint.tools.implementation.BaseToolWithRectangleShape$ResizeAction BOTTOM -> d
    org.catrobat.paintroid.pocketpaint.tools.implementation.BaseToolWithRectangleShape$ResizeAction LEFT -> e
    org.catrobat.paintroid.pocketpaint.tools.implementation.BaseToolWithRectangleShape$ResizeAction TOPLEFT -> f
    org.catrobat.paintroid.pocketpaint.tools.implementation.BaseToolWithRectangleShape$ResizeAction TOPRIGHT -> g
    org.catrobat.paintroid.pocketpaint.tools.implementation.BaseToolWithRectangleShape$ResizeAction BOTTOMLEFT -> h
    org.catrobat.paintroid.pocketpaint.tools.implementation.BaseToolWithRectangleShape$ResizeAction BOTTOMRIGHT -> i
    org.catrobat.paintroid.pocketpaint.tools.implementation.BaseToolWithRectangleShape$ResizeAction[] ENUM$VALUES -> j
    org.catrobat.paintroid.pocketpaint.tools.implementation.BaseToolWithRectangleShape$ResizeAction[] values() -> values
    org.catrobat.paintroid.pocketpaint.tools.implementation.BaseToolWithRectangleShape$ResizeAction valueOf(java.lang.String) -> valueOf
org.catrobat.paintroid.pocketpaint.tools.implementation.BaseToolWithRectangleShape$RotatePosition -> org.catrobat.paintroid.pocketpaint.c.b.g:
    org.catrobat.paintroid.pocketpaint.tools.implementation.BaseToolWithRectangleShape$RotatePosition TOP_LEFT -> a
    org.catrobat.paintroid.pocketpaint.tools.implementation.BaseToolWithRectangleShape$RotatePosition TOP_RIGHT -> b
    org.catrobat.paintroid.pocketpaint.tools.implementation.BaseToolWithRectangleShape$RotatePosition BOTTOM_LEFT -> c
    org.catrobat.paintroid.pocketpaint.tools.implementation.BaseToolWithRectangleShape$RotatePosition BOTTOM_RIGHT -> d
    org.catrobat.paintroid.pocketpaint.tools.implementation.BaseToolWithRectangleShape$RotatePosition[] ENUM$VALUES -> e
    org.catrobat.paintroid.pocketpaint.tools.implementation.BaseToolWithRectangleShape$RotatePosition[] values() -> values
    org.catrobat.paintroid.pocketpaint.tools.implementation.BaseToolWithRectangleShape$RotatePosition valueOf(java.lang.String) -> valueOf
org.catrobat.paintroid.pocketpaint.tools.implementation.BaseToolWithShape -> org.catrobat.paintroid.pocketpaint.c.b.h:
    int mPrimaryShapeColor -> x
    int mSecondaryShapeColor -> y
    android.graphics.PointF mToolPosition -> z
    android.graphics.Paint mLinePaint -> A
    float getStrokeWidthForZoom$483d241b(float,float) -> a
    float getInverselyProportionalSizeForZoom(float) -> a
org.catrobat.paintroid.pocketpaint.tools.implementation.CropTool -> org.catrobat.paintroid.pocketpaint.c.b.i:
    float mCropBoundWidthXLeft -> B
    float mCropBoundWidthXRight -> C
    float mCropBoundHeightYTop -> D
    float mCropBoundHeightYBottom -> E
    int mIntermediateCropBoundWidthXLeft -> F
    int mIntermediateCropBoundWidthXRight -> G
    int mIntermediateCropBoundHeightYTop -> H
    int mIntermediateCropBoundHeightYBottom -> I
    boolean mCropRunFinished -> J
    org.catrobat.paintroid.pocketpaint.tools.implementation.CropTool$FindCroppingCoordinatesAsyncTask mFindCroppingCoordinates -> K
    int[] $SWITCH_TABLE$org$catrobat$paintroid$pocketpaint$ui$Statusbar$ToolButtonIDs -> L
    void resetInternalState() -> c
    void drawToolSpecifics(android.graphics.Canvas) -> b
    void attributeButtonClick(org.catrobat.paintroid.pocketpaint.ui.Statusbar$ToolButtonIDs) -> b
    int getAttributeButtonResource(org.catrobat.paintroid.pocketpaint.ui.Statusbar$ToolButtonIDs) -> a
    void initialiseCroppingState() -> j
    void displayCroppingInformation() -> i
    void executeCropCommand() -> k
    boolean areCropBordersValid() -> l
    void update(java.util.Observable,java.lang.Object) -> update
    void setRectangle(android.graphics.RectF) -> a
    void initCropBounds() -> m
    void onClickInBox() -> h
    void access$0(org.catrobat.paintroid.pocketpaint.tools.implementation.CropTool) -> a
    void access$1(org.catrobat.paintroid.pocketpaint.tools.implementation.CropTool,int) -> a
    int access$2(org.catrobat.paintroid.pocketpaint.tools.implementation.CropTool) -> b
    int access$3(org.catrobat.paintroid.pocketpaint.tools.implementation.CropTool) -> c
    int access$4(org.catrobat.paintroid.pocketpaint.tools.implementation.CropTool) -> d
    int access$5(org.catrobat.paintroid.pocketpaint.tools.implementation.CropTool) -> e
    void access$6(org.catrobat.paintroid.pocketpaint.tools.implementation.CropTool,android.graphics.RectF) -> a
    void access$7(org.catrobat.paintroid.pocketpaint.tools.implementation.CropTool,int,int) -> a
    void access$8(org.catrobat.paintroid.pocketpaint.tools.implementation.CropTool,int) -> b
    void access$9(org.catrobat.paintroid.pocketpaint.tools.implementation.CropTool,int) -> c
    void access$10(org.catrobat.paintroid.pocketpaint.tools.implementation.CropTool,int) -> d
    void access$11$244e3a5f(org.catrobat.paintroid.pocketpaint.tools.implementation.CropTool) -> f
    int[] $SWITCH_TABLE$org$catrobat$paintroid$pocketpaint$ui$Statusbar$ToolButtonIDs() -> n
org.catrobat.paintroid.pocketpaint.tools.implementation.CropTool$FindCroppingCoordinatesAsyncTask -> org.catrobat.paintroid.pocketpaint.c.b.j:
    int mBitmapWidth -> b
    int mBitmapHeight -> c
    int TRANSPARENT -> d
    org.catrobat.paintroid.pocketpaint.tools.implementation.CropTool this$0 -> a
    java.lang.Void doInBackground$10299ca() -> a
    void getBitmapPixelsLineWidth(int[],int) -> a
    void getBitmapPixelsLineHeight(int[],int) -> b
    void searchLeftToRight() -> b
    void searchBottomToTop() -> c
    void searchRightToLeft() -> d
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.catrobat.paintroid.pocketpaint.tools.implementation.CursorTool -> org.catrobat.paintroid.pocketpaint.c.b.k:
    android.graphics.Path pathToDraw -> k
    int mPrimaryShapeColor -> l
    int mSecondaryShapeColor -> m
    boolean toolInDrawMode -> n
    int[] $SWITCH_TABLE$org$catrobat$paintroid$pocketpaint$ui$Statusbar$ToolButtonIDs -> o
    boolean handleDown(android.graphics.PointF) -> a
    boolean handleMove(android.graphics.PointF) -> b
    boolean handleUp(android.graphics.PointF) -> c
    void resetInternalState() -> c
    void draw(android.graphics.Canvas) -> a
    void attributeButtonClick(org.catrobat.paintroid.pocketpaint.ui.Statusbar$ToolButtonIDs) -> b
    int getAttributeButtonResource(org.catrobat.paintroid.pocketpaint.ui.Statusbar$ToolButtonIDs) -> a
    int[] $SWITCH_TABLE$org$catrobat$paintroid$pocketpaint$ui$Statusbar$ToolButtonIDs() -> g
org.catrobat.paintroid.pocketpaint.tools.implementation.DrawTool -> org.catrobat.paintroid.pocketpaint.c.b.l:
    android.graphics.Path pathToDraw -> k
    android.graphics.PointF mInitialEventCoordinate -> l
    android.graphics.PointF movedDistance -> m
    int[] $SWITCH_TABLE$org$catrobat$paintroid$pocketpaint$ui$Statusbar$ToolButtonIDs -> n
    void draw(android.graphics.Canvas) -> a
    boolean handleDown(android.graphics.PointF) -> a
    boolean handleMove(android.graphics.PointF) -> b
    boolean handleUp(android.graphics.PointF) -> c
    int getAttributeButtonResource(org.catrobat.paintroid.pocketpaint.ui.Statusbar$ToolButtonIDs) -> a
    void attributeButtonClick(org.catrobat.paintroid.pocketpaint.ui.Statusbar$ToolButtonIDs) -> b
    void resetInternalState() -> c
    int[] $SWITCH_TABLE$org$catrobat$paintroid$pocketpaint$ui$Statusbar$ToolButtonIDs() -> g
org.catrobat.paintroid.pocketpaint.tools.implementation.EraserTool -> org.catrobat.paintroid.pocketpaint.c.b.m:
    android.graphics.Paint mPreviousPaint -> n
    int[] $SWITCH_TABLE$org$catrobat$paintroid$pocketpaint$ui$Statusbar$ToolButtonIDs -> o
    void draw(android.graphics.Canvas) -> a
    boolean handleDown(android.graphics.PointF) -> a
    int getAttributeButtonResource(org.catrobat.paintroid.pocketpaint.ui.Statusbar$ToolButtonIDs) -> a
    void attributeButtonClick(org.catrobat.paintroid.pocketpaint.ui.Statusbar$ToolButtonIDs) -> b
    boolean handleMove(android.graphics.PointF) -> b
    boolean handleUp(android.graphics.PointF) -> c
    void resetInternalState() -> c
    android.graphics.Paint getDrawPaint() -> a
    void setDrawPaint(android.graphics.Paint) -> a
    int[] $SWITCH_TABLE$org$catrobat$paintroid$pocketpaint$ui$Statusbar$ToolButtonIDs() -> g
org.catrobat.paintroid.pocketpaint.tools.implementation.FillTool -> org.catrobat.paintroid.pocketpaint.c.b.n:
    int[] $SWITCH_TABLE$org$catrobat$paintroid$pocketpaint$ui$Statusbar$ToolButtonIDs -> k
    boolean handleDown(android.graphics.PointF) -> a
    boolean handleMove(android.graphics.PointF) -> b
    boolean handleUp(android.graphics.PointF) -> c
    int getAttributeButtonResource(org.catrobat.paintroid.pocketpaint.ui.Statusbar$ToolButtonIDs) -> a
    void attributeButtonClick(org.catrobat.paintroid.pocketpaint.ui.Statusbar$ToolButtonIDs) -> b
    void resetInternalState() -> c
    void draw(android.graphics.Canvas) -> a
    int[] $SWITCH_TABLE$org$catrobat$paintroid$pocketpaint$ui$Statusbar$ToolButtonIDs() -> g
org.catrobat.paintroid.pocketpaint.tools.implementation.FlipTool -> org.catrobat.paintroid.pocketpaint.c.b.o:
    int[] $SWITCH_TABLE$org$catrobat$paintroid$pocketpaint$ui$Statusbar$ToolButtonIDs -> k
    boolean handleDown(android.graphics.PointF) -> a
    boolean handleMove(android.graphics.PointF) -> b
    boolean handleUp(android.graphics.PointF) -> c
    void resetInternalState() -> c
    int getAttributeButtonResource(org.catrobat.paintroid.pocketpaint.ui.Statusbar$ToolButtonIDs) -> a
    void attributeButtonClick(org.catrobat.paintroid.pocketpaint.ui.Statusbar$ToolButtonIDs) -> b
    void draw(android.graphics.Canvas) -> a
    int[] $SWITCH_TABLE$org$catrobat$paintroid$pocketpaint$ui$Statusbar$ToolButtonIDs() -> g
org.catrobat.paintroid.pocketpaint.tools.implementation.MoveZoomTool -> org.catrobat.paintroid.pocketpaint.c.b.p:
    int[] $SWITCH_TABLE$org$catrobat$paintroid$pocketpaint$ui$Statusbar$ToolButtonIDs -> k
    void attributeButtonClick(org.catrobat.paintroid.pocketpaint.ui.Statusbar$ToolButtonIDs) -> b
    int getAttributeButtonResource(org.catrobat.paintroid.pocketpaint.ui.Statusbar$ToolButtonIDs) -> a
    boolean handleDown(android.graphics.PointF) -> a
    boolean handleMove(android.graphics.PointF) -> b
    boolean handleUp(android.graphics.PointF) -> c
    void resetInternalState() -> c
    void draw(android.graphics.Canvas) -> a
    int[] $SWITCH_TABLE$org$catrobat$paintroid$pocketpaint$ui$Statusbar$ToolButtonIDs() -> g
org.catrobat.paintroid.pocketpaint.tools.implementation.PipetteTool -> org.catrobat.paintroid.pocketpaint.c.b.q:
    int[] $SWITCH_TABLE$org$catrobat$paintroid$pocketpaint$ui$Statusbar$ToolButtonIDs -> k
    void draw(android.graphics.Canvas) -> a
    boolean handleDown(android.graphics.PointF) -> a
    boolean handleMove(android.graphics.PointF) -> b
    boolean handleUp(android.graphics.PointF) -> c
    boolean setColor(android.graphics.PointF) -> d
    int getAttributeButtonResource(org.catrobat.paintroid.pocketpaint.ui.Statusbar$ToolButtonIDs) -> a
    void resetInternalState() -> c
    void attributeButtonClick(org.catrobat.paintroid.pocketpaint.ui.Statusbar$ToolButtonIDs) -> b
    int[] $SWITCH_TABLE$org$catrobat$paintroid$pocketpaint$ui$Statusbar$ToolButtonIDs() -> g
org.catrobat.paintroid.pocketpaint.tools.implementation.RectangleFillTool -> org.catrobat.paintroid.pocketpaint.c.b.r:
    org.catrobat.paintroid.pocketpaint.tools.implementation.RectangleFillTool$BaseShape mBaseShape -> B
    org.catrobat.paintroid.pocketpaint.tools.implementation.RectangleFillTool$ShapeDrawType mShapeDrawType -> C
    int[] $SWITCH_TABLE$org$catrobat$paintroid$pocketpaint$tools$implementation$RectangleFillTool$ShapeDrawType -> D
    int[] $SWITCH_TABLE$org$catrobat$paintroid$pocketpaint$tools$implementation$RectangleFillTool$BaseShape -> E
    int[] $SWITCH_TABLE$org$catrobat$paintroid$pocketpaint$ui$Statusbar$ToolButtonIDs -> F
    void setDrawPaint(android.graphics.Paint) -> a
    void changePaintColor(int) -> b
    void createAndSetBitmap$1c1afbc() -> i
    void onClickInBox() -> h
    void attributeButtonClick(org.catrobat.paintroid.pocketpaint.ui.Statusbar$ToolButtonIDs) -> b
    int getAttributeButtonResource(org.catrobat.paintroid.pocketpaint.ui.Statusbar$ToolButtonIDs) -> a
    void drawToolSpecifics(android.graphics.Canvas) -> b
    void resetInternalState() -> c
    int[] $SWITCH_TABLE$org$catrobat$paintroid$pocketpaint$tools$implementation$RectangleFillTool$ShapeDrawType() -> j
    int[] $SWITCH_TABLE$org$catrobat$paintroid$pocketpaint$tools$implementation$RectangleFillTool$BaseShape() -> k
    int[] $SWITCH_TABLE$org$catrobat$paintroid$pocketpaint$ui$Statusbar$ToolButtonIDs() -> l
org.catrobat.paintroid.pocketpaint.tools.implementation.RectangleFillTool$1 -> org.catrobat.paintroid.pocketpaint.c.b.s:
    org.catrobat.paintroid.pocketpaint.tools.implementation.RectangleFillTool this$0 -> a
    void colorChanged(int) -> a
org.catrobat.paintroid.pocketpaint.tools.implementation.RectangleFillTool$BaseShape -> org.catrobat.paintroid.pocketpaint.c.b.t:
    org.catrobat.paintroid.pocketpaint.tools.implementation.RectangleFillTool$BaseShape RECTANGLE -> a
    org.catrobat.paintroid.pocketpaint.tools.implementation.RectangleFillTool$BaseShape OVAL -> b
    org.catrobat.paintroid.pocketpaint.tools.implementation.RectangleFillTool$BaseShape[] ENUM$VALUES -> c
    org.catrobat.paintroid.pocketpaint.tools.implementation.RectangleFillTool$BaseShape[] values() -> values
    org.catrobat.paintroid.pocketpaint.tools.implementation.RectangleFillTool$BaseShape valueOf(java.lang.String) -> valueOf
org.catrobat.paintroid.pocketpaint.tools.implementation.RectangleFillTool$ShapeDrawType -> org.catrobat.paintroid.pocketpaint.c.b.u:
    org.catrobat.paintroid.pocketpaint.tools.implementation.RectangleFillTool$ShapeDrawType OUTLINE -> a
    org.catrobat.paintroid.pocketpaint.tools.implementation.RectangleFillTool$ShapeDrawType FILL -> b
    org.catrobat.paintroid.pocketpaint.tools.implementation.RectangleFillTool$ShapeDrawType[] ENUM$VALUES -> c
    org.catrobat.paintroid.pocketpaint.tools.implementation.RectangleFillTool$ShapeDrawType[] values() -> values
    org.catrobat.paintroid.pocketpaint.tools.implementation.RectangleFillTool$ShapeDrawType valueOf(java.lang.String) -> valueOf
org.catrobat.paintroid.pocketpaint.tools.implementation.StampTool -> org.catrobat.paintroid.pocketpaint.c.b.v:
    org.catrobat.paintroid.pocketpaint.tools.implementation.StampTool$CreateAndSetBitmapAsyncTask mCreateAndSetBitmapAsync -> B
    boolean mStampActive -> C
    void attributeButtonClick(org.catrobat.paintroid.pocketpaint.ui.Statusbar$ToolButtonIDs) -> b
    void setBitmapFromFile(android.graphics.Bitmap) -> b
    void createAndSetBitmap() -> i
    void onClickInBox() -> h
    void drawToolSpecifics(android.graphics.Canvas) -> b
    void resetInternalState() -> c
    boolean canUseOldDrawingBitmap() -> j
org.catrobat.paintroid.pocketpaint.tools.implementation.StampTool$CreateAndSetBitmapAsyncTask -> org.catrobat.paintroid.pocketpaint.c.b.w:
    org.catrobat.paintroid.pocketpaint.tools.implementation.StampTool this$0 -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.catrobat.paintroid.pocketpaint.ui.DrawingSurface -> org.catrobat.paintroid.pocketpaint.ui.DrawingSurface:
    org.catrobat.paintroid.pocketpaint.ui.DrawingSurfaceThread mDrawingThread -> b
    android.graphics.Bitmap mWorkingBitmap -> c
    android.graphics.Rect mWorkingBitmapRect -> d
    android.graphics.Canvas mWorkingBitmapCanvas -> e
    android.graphics.Paint mFramePaint -> f
    android.graphics.Paint mClearPaint -> g
    boolean mSurfaceCanBeUsed -> a
    void recycleBitmap() -> a
    void doDraw(android.graphics.Canvas) -> a
    void init() -> f
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void resetBitmap(android.graphics.Bitmap) -> a
    void setBitmap(android.graphics.Bitmap) -> b
    android.graphics.Bitmap getBitmapCopy() -> b
    boolean isDrawingSurfaceBitmapValid() -> c
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    int getPixel(android.graphics.PointF) -> a
    void getPixels$690fc3dd(int[],int,int,int,int,int) -> a
    int getBitmapWidth() -> d
    int getBitmapHeight() -> e
    void access$0(org.catrobat.paintroid.pocketpaint.ui.DrawingSurface,android.graphics.Canvas) -> a
org.catrobat.paintroid.pocketpaint.ui.DrawingSurface$DrawLoop -> org.catrobat.paintroid.pocketpaint.ui.a:
    org.catrobat.paintroid.pocketpaint.ui.DrawingSurface this$0 -> a
    void run() -> run
org.catrobat.paintroid.pocketpaint.ui.DrawingSurfaceThread -> org.catrobat.paintroid.pocketpaint.ui.b:
    java.lang.Thread internalThread -> a
    java.lang.Runnable threadRunnable -> b
    boolean running -> c
    void start() -> a
    void stop() -> b
    void access$0(org.catrobat.paintroid.pocketpaint.ui.DrawingSurfaceThread) -> a
org.catrobat.paintroid.pocketpaint.ui.DrawingSurfaceThread$InternalRunnable -> org.catrobat.paintroid.pocketpaint.ui.c:
    org.catrobat.paintroid.pocketpaint.ui.DrawingSurfaceThread this$0 -> a
    void run() -> run
org.catrobat.paintroid.pocketpaint.ui.Perspective -> org.catrobat.paintroid.pocketpaint.ui.d:
    float mSurfaceWidth -> a
    float mSurfaceHeight -> b
    float mSurfaceCenterX -> c
    float mSurfaceCenterY -> d
    float mSurfaceScale -> e
    float mSurfaceTranslationX -> f
    float mSurfaceTranslationY -> g
    float mScreenWidth -> h
    float mScreenHeight -> i
    float mBitmapWidth -> j
    float mBitmapHeight -> k
    float mScreenDensity -> l
    boolean mIsFullscreen -> m
    void setSurfaceHolder(android.view.SurfaceHolder) -> a
    void resetScaleAndTranslation() -> a
    void setScale(float) -> a
    void multiplyScale(float) -> b
    void translate(float,float) -> a
    void convertFromScreenToCanvas(android.graphics.PointF) -> a
    void convertFromCanvasToScreen(android.graphics.PointF) -> b
    void applyToCanvas(android.graphics.Canvas) -> a
    float getScale() -> b
    float getScaleForCenterBitmap() -> c
    void setFullscreen(boolean) -> a
org.catrobat.paintroid.pocketpaint.ui.Statusbar -> org.catrobat.paintroid.pocketpaint.ui.e:
    android.widget.ImageButton mUndoButton -> d
    android.widget.ImageButton mRedoButton -> e
    android.widget.ImageButton mColorButton -> f
    android.widget.ImageButton mToolButton -> g
    org.catrobat.paintroid.pocketpaint.ui.DrawingSurface drawingSurface -> a
    org.catrobat.paintroid.pocketpaint.tools.Tool mCurrentTool -> b
    org.catrobat.paintroid.pocketpaint.tools.Tool mPreviousTool -> h
    org.catrobat.paintroid.pocketpaint.MainActivity mainActivity -> c
    android.widget.Toast mToolNameToast -> i
    boolean mUndoDisabled -> j
    boolean mRedoDisabled -> k
    void setTool(org.catrobat.paintroid.pocketpaint.tools.Tool) -> a
    void setToolSwitchBackground(int) -> c
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void toggleUndo(int) -> a
    void toggleRedo(int) -> b
    void enableUndo() -> a
    void disableUndo() -> b
    void enableRedo() -> c
    void disableRedo() -> d
    android.widget.ImageButton access$0(org.catrobat.paintroid.pocketpaint.ui.Statusbar) -> a
    android.widget.ImageButton access$1(org.catrobat.paintroid.pocketpaint.ui.Statusbar) -> b
org.catrobat.paintroid.pocketpaint.ui.Statusbar$1 -> org.catrobat.paintroid.pocketpaint.ui.f:
    org.catrobat.paintroid.pocketpaint.ui.Statusbar this$0 -> a
    int val$undoIcon -> b
    void run() -> run
org.catrobat.paintroid.pocketpaint.ui.Statusbar$2 -> org.catrobat.paintroid.pocketpaint.ui.g:
    org.catrobat.paintroid.pocketpaint.ui.Statusbar this$0 -> a
    int val$redoIcon -> b
    void run() -> run
org.catrobat.paintroid.pocketpaint.ui.Statusbar$ToolButtonIDs -> org.catrobat.paintroid.pocketpaint.ui.h:
    org.catrobat.paintroid.pocketpaint.ui.Statusbar$ToolButtonIDs BUTTON_ID_TOOL -> a
    org.catrobat.paintroid.pocketpaint.ui.Statusbar$ToolButtonIDs BUTTON_ID_PARAMETER_TOP -> b
    org.catrobat.paintroid.pocketpaint.ui.Statusbar$ToolButtonIDs BUTTON_ID_PARAMETER_BOTTOM_1 -> c
    org.catrobat.paintroid.pocketpaint.ui.Statusbar$ToolButtonIDs BUTTON_ID_PARAMETER_BOTTOM_2 -> d
    org.catrobat.paintroid.pocketpaint.ui.Statusbar$ToolButtonIDs[] ENUM$VALUES -> e
    org.catrobat.paintroid.pocketpaint.ui.Statusbar$ToolButtonIDs[] values() -> values
    org.catrobat.paintroid.pocketpaint.ui.Statusbar$ToolButtonIDs valueOf(java.lang.String) -> valueOf
org.catrobat.paintroid.pocketpaint.ui.button.ColorButton -> org.catrobat.paintroid.pocketpaint.ui.button.ColorButton:
    android.graphics.Paint mColorPaint -> a
    android.graphics.Paint mBorderPaint -> b
    android.graphics.Paint mBackgroundPaint -> c
    android.graphics.Bitmap mBackgroundBitmap -> d
    int mHeigth -> e
    int mWidth -> f
    void colorChanged(int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onMeasure(int,int) -> onMeasure
org.catrobat.paintroid.pocketpaint.ui.button.ToolsAdapter -> org.catrobat.paintroid.pocketpaint.ui.button.a:
    android.content.Context mContext -> a
    java.util.ArrayList mButtonsList -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    org.catrobat.paintroid.pocketpaint.tools.ToolType getToolType(int) -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
